                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module State_Options
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _ui_options_set_strings
                             12 	.globl _ui_options_render_all
                             13 	.globl _ui_options_render_refresh
                             14 	.globl _ui_options_unselect_entry
                             15 	.globl _ui_options_select_entry
                             16 	.globl _ui_options_previous_entry
                             17 	.globl _ui_options_next_entry
                             18 	.globl _ui_options_is_selected
                             19 	.globl _ui_options_get_entry
                             20 	.globl _ui_options_init
                             21 	.globl _statemanager_input_accepted
                             22 	.globl _statemanager_close_state
                             23 	.globl _cpct_akp_stop
                             24 	.globl _cpct_drawSolidBox
                             25 	.globl _cpct_isKeyPressed
                             26 	.globl _state_options_enter
                             27 	.globl _state_options_return
                             28 	.globl _state_options_input
                             29 	.globl _state_options_update
                             30 	.globl _state_options_render
                             31 	.globl _state_options_exit
                             32 ;--------------------------------------------------------
                             33 ; special function registers
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; ram data
                             37 ;--------------------------------------------------------
                             38 	.area _DATA
                             39 ;--------------------------------------------------------
                             40 ; ram data
                             41 ;--------------------------------------------------------
                             42 	.area _INITIALIZED
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area _DABS (ABS)
                             47 ;--------------------------------------------------------
                             48 ; global & static initialisations
                             49 ;--------------------------------------------------------
                             50 	.area _HOME
                             51 	.area _GSINIT
                             52 	.area _GSFINAL
                             53 	.area _GSINIT
                             54 ;--------------------------------------------------------
                             55 ; Home
                             56 ;--------------------------------------------------------
                             57 	.area _HOME
                             58 	.area _HOME
                             59 ;--------------------------------------------------------
                             60 ; code
                             61 ;--------------------------------------------------------
                             62 	.area _CODE
                             63 ;src/State_Options.c:13: void state_options_enter(){
                             64 ;	---------------------------------
                             65 ; Function state_options_enter
                             66 ; ---------------------------------
   0000                      67 _state_options_enter::
                             68 ;src/State_Options.c:14: cpct_drawSolidBox (cpctm_screenPtr(CPCT_VMEM_START, 23, 64), g_colors[4], 34, 80);
   0000 21r04r00      [10]   69 	ld	hl, #_g_colors + 4
   0003 46            [ 7]   70 	ld	b,(hl)
   0004 21 22 50      [10]   71 	ld	hl,#0x5022
   0007 E5            [11]   72 	push	hl
   0008 C5            [11]   73 	push	bc
   0009 33            [ 6]   74 	inc	sp
   000A 21 97 C2      [10]   75 	ld	hl,#0xC297
   000D E5            [11]   76 	push	hl
   000E CDr00r00      [17]   77 	call	_cpct_drawSolidBox
   0011 F1            [10]   78 	pop	af
   0012 F1            [10]   79 	pop	af
   0013 33            [ 6]   80 	inc	sp
                             81 ;src/State_Options.c:15: cpct_drawSolidBox (cpctm_screenPtr(CPCT_VMEM_START, 24, 68), g_colors[1], 32, 72);
   0014 21r01r00      [10]   82 	ld	hl, #_g_colors + 1
   0017 46            [ 7]   83 	ld	b,(hl)
   0018 21 20 48      [10]   84 	ld	hl,#0x4820
   001B E5            [11]   85 	push	hl
   001C C5            [11]   86 	push	bc
   001D 33            [ 6]   87 	inc	sp
   001E 21 98 E2      [10]   88 	ld	hl,#0xE298
   0021 E5            [11]   89 	push	hl
   0022 CDr00r00      [17]   90 	call	_cpct_drawSolidBox
   0025 F1            [10]   91 	pop	af
   0026 F1            [10]   92 	pop	af
   0027 33            [ 6]   93 	inc	sp
                             94 ;src/State_Options.c:16: ui_options_init();
   0028 CDr00r00      [17]   95 	call	_ui_options_init
                             96 ;src/State_Options.c:17: ui_options_render_all();
   002B C3r00r00      [10]   97 	jp  _ui_options_render_all
                             98 ;src/State_Options.c:20: void state_options_return(){
                             99 ;	---------------------------------
                            100 ; Function state_options_return
                            101 ; ---------------------------------
   002E                     102 _state_options_return::
                            103 ;src/State_Options.c:22: }
   002E C9            [10]  104 	ret
                            105 ;src/State_Options.c:24: void state_options_input(){
                            106 ;	---------------------------------
                            107 ; Function state_options_input
                            108 ; ---------------------------------
   002F                     109 _state_options_input::
                            110 ;src/State_Options.c:25: if(cpct_isKeyPressed(Key_CursorUp)){
   002F 21 00 01      [10]  111 	ld	hl,#0x0100
   0032 CDr00r00      [17]  112 	call	_cpct_isKeyPressed
   0035 7D            [ 4]  113 	ld	a,l
   0036 B7            [ 4]  114 	or	a, a
   0037 28 06         [12]  115 	jr	Z,00107$
                            116 ;src/State_Options.c:26: ui_options_previous_entry();
   0039 CDr00r00      [17]  117 	call	_ui_options_previous_entry
                            118 ;src/State_Options.c:27: statemanager_input_accepted();
   003C C3r00r00      [10]  119 	jp  _statemanager_input_accepted
   003F                     120 00107$:
                            121 ;src/State_Options.c:29: else if(cpct_isKeyPressed(Key_CursorDown)){
   003F 21 00 04      [10]  122 	ld	hl,#0x0400
   0042 CDr00r00      [17]  123 	call	_cpct_isKeyPressed
   0045 7D            [ 4]  124 	ld	a,l
   0046 B7            [ 4]  125 	or	a, a
   0047 28 06         [12]  126 	jr	Z,00104$
                            127 ;src/State_Options.c:30: ui_options_next_entry();
   0049 CDr00r00      [17]  128 	call	_ui_options_next_entry
                            129 ;src/State_Options.c:31: statemanager_input_accepted();
   004C C3r00r00      [10]  130 	jp  _statemanager_input_accepted
   004F                     131 00104$:
                            132 ;src/State_Options.c:33: else if(cpct_isKeyPressed(Key_Return)){
   004F 21 02 04      [10]  133 	ld	hl,#0x0402
   0052 CDr00r00      [17]  134 	call	_cpct_isKeyPressed
   0055 7D            [ 4]  135 	ld	a,l
   0056 B7            [ 4]  136 	or	a, a
   0057 C8            [11]  137 	ret	Z
                            138 ;src/State_Options.c:34: ui_options_select_entry();
   0058 CDr00r00      [17]  139 	call	_ui_options_select_entry
                            140 ;src/State_Options.c:35: statemanager_input_accepted();
   005B C3r00r00      [10]  141 	jp  _statemanager_input_accepted
                            142 ;src/State_Options.c:39: void state_options_update(){
                            143 ;	---------------------------------
                            144 ; Function state_options_update
                            145 ; ---------------------------------
   005E                     146 _state_options_update::
                            147 ;src/State_Options.c:40: if(ui_options_is_selected()){
   005E CDr00r00      [17]  148 	call	_ui_options_is_selected
   0061 7D            [ 4]  149 	ld	a,l
   0062 B7            [ 4]  150 	or	a, a
   0063 CAr00r00      [10]  151 	jp	Z,_ui_options_unselect_entry
                            152 ;src/State_Options.c:41: ui_options_render_refresh();
   0066 CDr00r00      [17]  153 	call	_ui_options_render_refresh
                            154 ;src/State_Options.c:42: switch(ui_options_get_entry()){
   0069 CDr00r00      [17]  155 	call	_ui_options_get_entry
   006C 5D            [ 4]  156 	ld	e,l
   006D 3E 02         [ 7]  157 	ld	a,#0x02
   006F 93            [ 4]  158 	sub	a, e
   0070 DAr00r00      [10]  159 	jp	C,_ui_options_unselect_entry
   0073 16 00         [ 7]  160 	ld	d,#0x00
   0075 21r7Br00      [10]  161 	ld	hl,#00123$
   0078 19            [11]  162 	add	hl,de
   0079 19            [11]  163 	add	hl,de
                            164 ;src/State_Options.c:43: case 0:{//Textures
   007A E9            [ 4]  165 	jp	(hl)
   007B                     166 00123$:
   007B 18 04         [12]  167 	jr	00101$
   007D 18 15         [12]  168 	jr	00102$
   007F 18 2F         [12]  169 	jr	00105$
   0081                     170 00101$:
                            171 ;src/State_Options.c:44: textures_on=!textures_on;
   0081 3Ar00r00      [13]  172 	ld	a,(#_textures_on + 0)
   0084 D6 01         [ 7]  173 	sub	a,#0x01
   0086 3E 00         [ 7]  174 	ld	a,#0x00
   0088 17            [ 4]  175 	rla
   0089 4F            [ 4]  176 	ld	c,a
   008A 21r00r00      [10]  177 	ld	hl,#_textures_on + 0
   008D 71            [ 7]  178 	ld	(hl), c
                            179 ;src/State_Options.c:45: ui_options_set_strings();
   008E CDr00r00      [17]  180 	call	_ui_options_set_strings
                            181 ;src/State_Options.c:46: break;
   0091 C3r00r00      [10]  182 	jp	_ui_options_unselect_entry
                            183 ;src/State_Options.c:48: case 1:{//Sound
   0094                     184 00102$:
                            185 ;src/State_Options.c:49: music_on=!music_on;
   0094 3Ar00r00      [13]  186 	ld	a,(#_music_on + 0)
   0097 D6 01         [ 7]  187 	sub	a,#0x01
   0099 3E 00         [ 7]  188 	ld	a,#0x00
   009B 17            [ 4]  189 	rla
   009C 4F            [ 4]  190 	ld	c,a
   009D 21r00r00      [10]  191 	ld	hl,#_music_on + 0
   00A0 71            [ 7]  192 	ld	(hl), c
                            193 ;src/State_Options.c:50: if(!music_on) cpct_akp_stop ();
   00A1 3Ar00r00      [13]  194 	ld	a,(#_music_on + 0)
   00A4 B7            [ 4]  195 	or	a, a
   00A5 20 03         [12]  196 	jr	NZ,00104$
   00A7 CDr00r00      [17]  197 	call	_cpct_akp_stop
   00AA                     198 00104$:
                            199 ;src/State_Options.c:51: ui_options_set_strings();
   00AA CDr00r00      [17]  200 	call	_ui_options_set_strings
                            201 ;src/State_Options.c:52: break;
   00AD C3r00r00      [10]  202 	jp	_ui_options_unselect_entry
                            203 ;src/State_Options.c:54: case 2:{
   00B0                     204 00105$:
                            205 ;src/State_Options.c:55: statemanager_close_state();
   00B0 CDr00r00      [17]  206 	call	_statemanager_close_state
                            207 ;src/State_Options.c:58: }
                            208 ;src/State_Options.c:60: ui_options_unselect_entry();
   00B3 C3r00r00      [10]  209 	jp  _ui_options_unselect_entry
                            210 ;src/State_Options.c:63: void state_options_render(){
                            211 ;	---------------------------------
                            212 ; Function state_options_render
                            213 ; ---------------------------------
   00B6                     214 _state_options_render::
                            215 ;src/State_Options.c:64: ui_options_render_refresh();
   00B6 C3r00r00      [10]  216 	jp  _ui_options_render_refresh
                            217 ;src/State_Options.c:67: void state_options_exit(){
                            218 ;	---------------------------------
                            219 ; Function state_options_exit
                            220 ; ---------------------------------
   00B9                     221 _state_options_exit::
                            222 ;src/State_Options.c:68: cpct_drawSolidBox (cpctm_screenPtr(CPCT_VMEM_START, 23, 64), g_colors[1], 34, 80);
   00B9 21r01r00      [10]  223 	ld	hl, #(_g_colors + 0x0001) + 0
   00BC 46            [ 7]  224 	ld	b,(hl)
   00BD 21 22 50      [10]  225 	ld	hl,#0x5022
   00C0 E5            [11]  226 	push	hl
   00C1 C5            [11]  227 	push	bc
   00C2 33            [ 6]  228 	inc	sp
   00C3 21 97 C2      [10]  229 	ld	hl,#0xC297
   00C6 E5            [11]  230 	push	hl
   00C7 CDr00r00      [17]  231 	call	_cpct_drawSolidBox
   00CA F1            [10]  232 	pop	af
   00CB F1            [10]  233 	pop	af
   00CC 33            [ 6]  234 	inc	sp
   00CD C9            [10]  235 	ret
                            236 	.area _CODE
                            237 	.area _INITIALIZER
                            238 	.area _CABS (ABS)
