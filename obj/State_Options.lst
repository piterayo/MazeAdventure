                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module State_Options
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _ui_options_set_strings
                             12 	.globl _ui_options_render_all
                             13 	.globl _ui_options_render_refresh
                             14 	.globl _ui_options_unselect_entry
                             15 	.globl _ui_options_select_entry
                             16 	.globl _ui_options_previous_entry
                             17 	.globl _ui_options_next_entry
                             18 	.globl _ui_options_is_selected
                             19 	.globl _ui_options_get_entry
                             20 	.globl _ui_options_init
                             21 	.globl _statemanager_input_accepted
                             22 	.globl _statemanager_close_state
                             23 	.globl _cpct_drawSolidBox
                             24 	.globl _cpct_isKeyPressed
                             25 	.globl _state_options_enter
                             26 	.globl _state_options_return
                             27 	.globl _state_options_input
                             28 	.globl _state_options_update
                             29 	.globl _state_options_render
                             30 	.globl _state_options_exit
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DATA
                             38 ;--------------------------------------------------------
                             39 ; ram data
                             40 ;--------------------------------------------------------
                             41 	.area _INITIALIZED
                             42 ;--------------------------------------------------------
                             43 ; absolute external ram data
                             44 ;--------------------------------------------------------
                             45 	.area _DABS (ABS)
                             46 ;--------------------------------------------------------
                             47 ; global & static initialisations
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _GSINIT
                             51 	.area _GSFINAL
                             52 	.area _GSINIT
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE
                             62 ;src/State_Options.c:13: void state_options_enter(){
                             63 ;	---------------------------------
                             64 ; Function state_options_enter
                             65 ; ---------------------------------
   0000                      66 _state_options_enter::
                             67 ;src/State_Options.c:14: cpct_drawSolidBox (cpctm_screenPtr(CPCT_VMEM_START, 23, 64), g_colors[4], 34, 80);
   0000 21r04r00      [10]   68 	ld	hl, #_g_colors + 4
   0003 46            [ 7]   69 	ld	b,(hl)
   0004 21 22 50      [10]   70 	ld	hl,#0x5022
   0007 E5            [11]   71 	push	hl
   0008 C5            [11]   72 	push	bc
   0009 33            [ 6]   73 	inc	sp
   000A 21 97 C2      [10]   74 	ld	hl,#0xC297
   000D E5            [11]   75 	push	hl
   000E CDr00r00      [17]   76 	call	_cpct_drawSolidBox
   0011 F1            [10]   77 	pop	af
   0012 F1            [10]   78 	pop	af
   0013 33            [ 6]   79 	inc	sp
                             80 ;src/State_Options.c:15: cpct_drawSolidBox (cpctm_screenPtr(CPCT_VMEM_START, 24, 68), g_colors[1], 32, 72);
   0014 21r01r00      [10]   81 	ld	hl, #_g_colors + 1
   0017 46            [ 7]   82 	ld	b,(hl)
   0018 21 20 48      [10]   83 	ld	hl,#0x4820
   001B E5            [11]   84 	push	hl
   001C C5            [11]   85 	push	bc
   001D 33            [ 6]   86 	inc	sp
   001E 21 98 E2      [10]   87 	ld	hl,#0xE298
   0021 E5            [11]   88 	push	hl
   0022 CDr00r00      [17]   89 	call	_cpct_drawSolidBox
   0025 F1            [10]   90 	pop	af
   0026 F1            [10]   91 	pop	af
   0027 33            [ 6]   92 	inc	sp
                             93 ;src/State_Options.c:16: ui_options_init();
   0028 CDr00r00      [17]   94 	call	_ui_options_init
                             95 ;src/State_Options.c:17: ui_options_render_all();
   002B C3r00r00      [10]   96 	jp  _ui_options_render_all
                             97 ;src/State_Options.c:20: void state_options_return(){
                             98 ;	---------------------------------
                             99 ; Function state_options_return
                            100 ; ---------------------------------
   002E                     101 _state_options_return::
                            102 ;src/State_Options.c:22: }
   002E C9            [10]  103 	ret
                            104 ;src/State_Options.c:24: void state_options_input(){
                            105 ;	---------------------------------
                            106 ; Function state_options_input
                            107 ; ---------------------------------
   002F                     108 _state_options_input::
                            109 ;src/State_Options.c:25: if(cpct_isKeyPressed(Key_CursorUp)){
   002F 21 00 01      [10]  110 	ld	hl,#0x0100
   0032 CDr00r00      [17]  111 	call	_cpct_isKeyPressed
   0035 7D            [ 4]  112 	ld	a,l
   0036 B7            [ 4]  113 	or	a, a
   0037 28 06         [12]  114 	jr	Z,00107$
                            115 ;src/State_Options.c:26: ui_options_previous_entry();
   0039 CDr00r00      [17]  116 	call	_ui_options_previous_entry
                            117 ;src/State_Options.c:27: statemanager_input_accepted();
   003C C3r00r00      [10]  118 	jp  _statemanager_input_accepted
   003F                     119 00107$:
                            120 ;src/State_Options.c:29: else if(cpct_isKeyPressed(Key_CursorDown)){
   003F 21 00 04      [10]  121 	ld	hl,#0x0400
   0042 CDr00r00      [17]  122 	call	_cpct_isKeyPressed
   0045 7D            [ 4]  123 	ld	a,l
   0046 B7            [ 4]  124 	or	a, a
   0047 28 06         [12]  125 	jr	Z,00104$
                            126 ;src/State_Options.c:30: ui_options_next_entry();
   0049 CDr00r00      [17]  127 	call	_ui_options_next_entry
                            128 ;src/State_Options.c:31: statemanager_input_accepted();
   004C C3r00r00      [10]  129 	jp  _statemanager_input_accepted
   004F                     130 00104$:
                            131 ;src/State_Options.c:33: else if(cpct_isKeyPressed(Key_Return)){
   004F 21 02 04      [10]  132 	ld	hl,#0x0402
   0052 CDr00r00      [17]  133 	call	_cpct_isKeyPressed
   0055 7D            [ 4]  134 	ld	a,l
   0056 B7            [ 4]  135 	or	a, a
   0057 C8            [11]  136 	ret	Z
                            137 ;src/State_Options.c:34: ui_options_select_entry();
   0058 CDr00r00      [17]  138 	call	_ui_options_select_entry
                            139 ;src/State_Options.c:35: statemanager_input_accepted();
   005B C3r00r00      [10]  140 	jp  _statemanager_input_accepted
                            141 ;src/State_Options.c:39: void state_options_update(){
                            142 ;	---------------------------------
                            143 ; Function state_options_update
                            144 ; ---------------------------------
   005E                     145 _state_options_update::
                            146 ;src/State_Options.c:40: if(ui_options_is_selected()){
   005E CDr00r00      [17]  147 	call	_ui_options_is_selected
   0061 7D            [ 4]  148 	ld	a,l
   0062 B7            [ 4]  149 	or	a, a
   0063 CAr00r00      [10]  150 	jp	Z,_ui_options_unselect_entry
                            151 ;src/State_Options.c:41: ui_options_render_refresh();
   0066 CDr00r00      [17]  152 	call	_ui_options_render_refresh
                            153 ;src/State_Options.c:42: switch(ui_options_get_entry()){
   0069 CDr00r00      [17]  154 	call	_ui_options_get_entry
   006C 5D            [ 4]  155 	ld	e,l
   006D 3E 02         [ 7]  156 	ld	a,#0x02
   006F 93            [ 4]  157 	sub	a, e
   0070 DAr00r00      [10]  158 	jp	C,_ui_options_unselect_entry
   0073 16 00         [ 7]  159 	ld	d,#0x00
   0075 21r7Br00      [10]  160 	ld	hl,#00117$
   0078 19            [11]  161 	add	hl,de
   0079 19            [11]  162 	add	hl,de
                            163 ;src/State_Options.c:43: case 0:{//Textures
   007A E9            [ 4]  164 	jp	(hl)
   007B                     165 00117$:
   007B 18 04         [12]  166 	jr	00101$
   007D 18 15         [12]  167 	jr	00102$
   007F 18 26         [12]  168 	jr	00103$
   0081                     169 00101$:
                            170 ;src/State_Options.c:44: textures_on=!textures_on;
   0081 3Ar00r00      [13]  171 	ld	a,(#_textures_on + 0)
   0084 D6 01         [ 7]  172 	sub	a,#0x01
   0086 3E 00         [ 7]  173 	ld	a,#0x00
   0088 17            [ 4]  174 	rla
   0089 4F            [ 4]  175 	ld	c,a
   008A 21r00r00      [10]  176 	ld	hl,#_textures_on + 0
   008D 71            [ 7]  177 	ld	(hl), c
                            178 ;src/State_Options.c:45: ui_options_set_strings();
   008E CDr00r00      [17]  179 	call	_ui_options_set_strings
                            180 ;src/State_Options.c:46: break;
   0091 C3r00r00      [10]  181 	jp	_ui_options_unselect_entry
                            182 ;src/State_Options.c:48: case 1:{//Sound
   0094                     183 00102$:
                            184 ;src/State_Options.c:49: music_on=!music_on;
   0094 3Ar00r00      [13]  185 	ld	a,(#_music_on + 0)
   0097 D6 01         [ 7]  186 	sub	a,#0x01
   0099 3E 00         [ 7]  187 	ld	a,#0x00
   009B 17            [ 4]  188 	rla
   009C 4F            [ 4]  189 	ld	c,a
   009D 21r00r00      [10]  190 	ld	hl,#_music_on + 0
   00A0 71            [ 7]  191 	ld	(hl), c
                            192 ;src/State_Options.c:50: ui_options_set_strings();
   00A1 CDr00r00      [17]  193 	call	_ui_options_set_strings
                            194 ;src/State_Options.c:51: break;
   00A4 C3r00r00      [10]  195 	jp	_ui_options_unselect_entry
                            196 ;src/State_Options.c:53: case 2:{
   00A7                     197 00103$:
                            198 ;src/State_Options.c:54: statemanager_close_state();
   00A7 CDr00r00      [17]  199 	call	_statemanager_close_state
                            200 ;src/State_Options.c:57: }
                            201 ;src/State_Options.c:59: ui_options_unselect_entry();
   00AA C3r00r00      [10]  202 	jp  _ui_options_unselect_entry
                            203 ;src/State_Options.c:62: void state_options_render(){
                            204 ;	---------------------------------
                            205 ; Function state_options_render
                            206 ; ---------------------------------
   00AD                     207 _state_options_render::
                            208 ;src/State_Options.c:63: ui_options_render_refresh();
   00AD C3r00r00      [10]  209 	jp  _ui_options_render_refresh
                            210 ;src/State_Options.c:66: void state_options_exit(){
                            211 ;	---------------------------------
                            212 ; Function state_options_exit
                            213 ; ---------------------------------
   00B0                     214 _state_options_exit::
                            215 ;src/State_Options.c:67: cpct_drawSolidBox (cpctm_screenPtr(CPCT_VMEM_START, 23, 64), g_colors[1], 34, 80);
   00B0 21r01r00      [10]  216 	ld	hl, #(_g_colors + 0x0001) + 0
   00B3 46            [ 7]  217 	ld	b,(hl)
   00B4 21 22 50      [10]  218 	ld	hl,#0x5022
   00B7 E5            [11]  219 	push	hl
   00B8 C5            [11]  220 	push	bc
   00B9 33            [ 6]  221 	inc	sp
   00BA 21 97 C2      [10]  222 	ld	hl,#0xC297
   00BD E5            [11]  223 	push	hl
   00BE CDr00r00      [17]  224 	call	_cpct_drawSolidBox
   00C1 F1            [10]  225 	pop	af
   00C2 F1            [10]  226 	pop	af
   00C3 33            [ 6]  227 	inc	sp
   00C4 C9            [10]  228 	ret
                            229 	.area _CODE
                            230 	.area _INITIALIZER
                            231 	.area _CABS (ABS)
