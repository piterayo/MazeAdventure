                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module Map
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _generate_exit_door
                             12 	.globl _generate_map
                             13 	.globl _generate_final_map
                             14 	.globl _get_random_wall
                             15 	.globl _level_get_level
                             16 	.globl _player_get_direction_index
                             17 	.globl _player_turn_left
                             18 	.globl _cpct_restoreState_mxor_u8
                             19 	.globl _cpct_setSeed_mxor
                             20 	.globl _cpct_getRandom_mxor_u8
                             21 	.globl _cpct_memset
                             22 	.globl _rand_seed
                             23 	.globl _map_get_seed
                             24 	.globl _generate_level
                             25 	.globl _generate_level_with_seed
                             26 ;--------------------------------------------------------
                             27 ; special function registers
                             28 ;--------------------------------------------------------
                             29 ;--------------------------------------------------------
                             30 ; ram data
                             31 ;--------------------------------------------------------
                             32 	.area _DATA
   0000                      33 _rand_seed::
   0000                      34 	.ds 2
                             35 ;--------------------------------------------------------
                             36 ; ram data
                             37 ;--------------------------------------------------------
                             38 	.area _INITIALIZED
                             39 ;--------------------------------------------------------
                             40 ; absolute external ram data
                             41 ;--------------------------------------------------------
                             42 	.area _DABS (ABS)
                             43 ;--------------------------------------------------------
                             44 ; global & static initialisations
                             45 ;--------------------------------------------------------
                             46 	.area _HOME
                             47 	.area _GSINIT
                             48 	.area _GSFINAL
                             49 	.area _GSINIT
                             50 ;--------------------------------------------------------
                             51 ; Home
                             52 ;--------------------------------------------------------
                             53 	.area _HOME
                             54 	.area _HOME
                             55 ;--------------------------------------------------------
                             56 ; code
                             57 ;--------------------------------------------------------
                             58 	.area _CODE
                             59 ;src/Map.c:14: u16 map_get_seed(){
                             60 ;	---------------------------------
                             61 ; Function map_get_seed
                             62 ; ---------------------------------
   0000                      63 _map_get_seed::
                             64 ;src/Map.c:15: return rand_seed;
   0000 2Ar00r00      [16]   65 	ld	hl,(_rand_seed)
   0003 C9            [10]   66 	ret
                             67 ;src/Map.c:18: u8 get_random_wall(){
                             68 ;	---------------------------------
                             69 ; Function get_random_wall
                             70 ; ---------------------------------
   0004                      71 _get_random_wall::
                             72 ;src/Map.c:19: u8 cellType = cpct_getRandom_mxor_u8 ();
   0004 CDr00r00      [17]   73 	call	_cpct_getRandom_mxor_u8
                             74 ;src/Map.c:20: if(cellType&1){ //1,3,5,7
   0007 CB 45         [ 8]   75 	bit	0, l
   0009 28 03         [12]   76 	jr	Z,00108$
                             77 ;src/Map.c:21: return CELLTYPE_WALL1;
   000B 2E 81         [ 7]   78 	ld	l,#0x81
   000D C9            [10]   79 	ret
   000E                      80 00108$:
                             81 ;src/Map.c:24: if(cellType&3){//2,6
   000E 7D            [ 4]   82 	ld	a,l
   000F E6 03         [ 7]   83 	and	a, #0x03
   0011 28 03         [12]   84 	jr	Z,00105$
                             85 ;src/Map.c:25: return CELLTYPE_WALL2;
   0013 2E 82         [ 7]   86 	ld	l,#0x82
   0015 C9            [10]   87 	ret
   0016                      88 00105$:
                             89 ;src/Map.c:28: if(cellType&7){//4
   0016 7D            [ 4]   90 	ld	a,l
   0017 E6 07         [ 7]   91 	and	a, #0x07
   0019 28 03         [12]   92 	jr	Z,00102$
                             93 ;src/Map.c:29: return CELLTYPE_WALL3;
   001B 2E 83         [ 7]   94 	ld	l,#0x83
   001D C9            [10]   95 	ret
   001E                      96 00102$:
                             97 ;src/Map.c:32: return CELLTYPE_WALL4;  
   001E 2E 84         [ 7]   98 	ld	l,#0x84
   0020 C9            [10]   99 	ret
                            100 ;src/Map.c:38: void generate_final_map(){
                            101 ;	---------------------------------
                            102 ; Function generate_final_map
                            103 ; ---------------------------------
   0021                     104 _generate_final_map::
                            105 ;src/Map.c:43: while(m>=MAP_MEM){
   0021 21 D0 8C      [10]  106 	ld	hl,#0x8CD0
   0024                     107 00101$:
   0024 7D            [ 4]  108 	ld	a,l
   0025 D6 D0         [ 7]  109 	sub	a, #0xD0
   0027 7C            [ 4]  110 	ld	a,h
   0028 DE 88         [ 7]  111 	sbc	a, #0x88
   002A 38 05         [12]  112 	jr	C,00103$
                            113 ;src/Map.c:44: *m=CELLTYPE_WALL1;
   002C 36 81         [10]  114 	ld	(hl),#0x81
                            115 ;src/Map.c:45: --m;
   002E 2B            [ 6]  116 	dec	hl
   002F 18 F3         [12]  117 	jr	00101$
   0031                     118 00103$:
                            119 ;src/Map.c:48: for(i=1;i<KING_LEVEL_WIDTH-1;++i){
   0031 0E 01         [ 7]  120 	ld	c,#0x01
                            121 ;src/Map.c:49: for(j=1;j<KING_LEVEL_HEIGHT-1;++j){
   0033                     122 00124$:
   0033 06 01         [ 7]  123 	ld	b,#0x01
   0035                     124 00110$:
                            125 ;src/Map.c:50: map[j][i]=CELLTYPE_FLOOR;//get_random_wall();
   0035 68            [ 4]  126 	ld	l,b
   0036 26 00         [ 7]  127 	ld	h,#0x00
   0038 29            [11]  128 	add	hl, hl
   0039 29            [11]  129 	add	hl, hl
   003A 29            [11]  130 	add	hl, hl
   003B 29            [11]  131 	add	hl, hl
   003C 29            [11]  132 	add	hl, hl
   003D 11 D0 88      [10]  133 	ld	de,#0x88D0
   0040 19            [11]  134 	add	hl,de
   0041 59            [ 4]  135 	ld	e,c
   0042 16 00         [ 7]  136 	ld	d,#0x00
   0044 19            [11]  137 	add	hl,de
   0045 36 00         [10]  138 	ld	(hl),#0x00
                            139 ;src/Map.c:49: for(j=1;j<KING_LEVEL_HEIGHT-1;++j){
   0047 04            [ 4]  140 	inc	b
   0048 78            [ 4]  141 	ld	a,b
   0049 D6 08         [ 7]  142 	sub	a, #0x08
   004B 38 E8         [12]  143 	jr	C,00110$
                            144 ;src/Map.c:48: for(i=1;i<KING_LEVEL_WIDTH-1;++i){
   004D 0C            [ 4]  145 	inc	c
   004E 79            [ 4]  146 	ld	a,c
   004F D6 08         [ 7]  147 	sub	a, #0x08
   0051 38 E0         [12]  148 	jr	C,00124$
                            149 ;src/Map.c:54: for(i=2;i<7;i+=2){
   0053 0E 02         [ 7]  150 	ld	c,#0x02
   0055                     151 00114$:
                            152 ;src/Map.c:55: map[i][2]=(cpct_getRandom_mxor_u8 ()%2)?CELLTYPE_WALL2:CELLTYPE_WALL3;//get_random_wall();
   0055 69            [ 4]  153 	ld	l,c
   0056 26 00         [ 7]  154 	ld	h,#0x00
   0058 29            [11]  155 	add	hl, hl
   0059 29            [11]  156 	add	hl, hl
   005A 29            [11]  157 	add	hl, hl
   005B 29            [11]  158 	add	hl, hl
   005C 29            [11]  159 	add	hl, hl
   005D 11 D0 88      [10]  160 	ld	de, #0x88D0
   0060 19            [11]  161 	add	hl, de
   0061 5D            [ 4]  162 	ld	e,l
   0062 54            [ 4]  163 	ld	d,h
   0063 23            [ 6]  164 	inc	hl
   0064 23            [ 6]  165 	inc	hl
   0065 E5            [11]  166 	push	hl
   0066 C5            [11]  167 	push	bc
   0067 D5            [11]  168 	push	de
   0068 CDr00r00      [17]  169 	call	_cpct_getRandom_mxor_u8
   006B 7D            [ 4]  170 	ld	a,l
   006C D1            [10]  171 	pop	de
   006D C1            [10]  172 	pop	bc
   006E E1            [10]  173 	pop	hl
   006F 0F            [ 4]  174 	rrca
   0070 30 04         [12]  175 	jr	NC,00118$
   0072 06 82         [ 7]  176 	ld	b,#0x82
   0074 18 02         [12]  177 	jr	00119$
   0076                     178 00118$:
   0076 06 83         [ 7]  179 	ld	b,#0x83
   0078                     180 00119$:
   0078 70            [ 7]  181 	ld	(hl),b
                            182 ;src/Map.c:56: map[i][6]=(cpct_getRandom_mxor_u8 ()%2)?CELLTYPE_WALL2:CELLTYPE_WALL3;//get_random_wall();
   0079 21 06 00      [10]  183 	ld	hl,#0x0006
   007C 19            [11]  184 	add	hl,de
   007D E5            [11]  185 	push	hl
   007E C5            [11]  186 	push	bc
   007F CDr00r00      [17]  187 	call	_cpct_getRandom_mxor_u8
   0082 7D            [ 4]  188 	ld	a,l
   0083 C1            [10]  189 	pop	bc
   0084 E1            [10]  190 	pop	hl
   0085 0F            [ 4]  191 	rrca
   0086 30 04         [12]  192 	jr	NC,00120$
   0088 06 82         [ 7]  193 	ld	b,#0x82
   008A 18 02         [12]  194 	jr	00121$
   008C                     195 00120$:
   008C 06 83         [ 7]  196 	ld	b,#0x83
   008E                     197 00121$:
   008E 70            [ 7]  198 	ld	(hl),b
                            199 ;src/Map.c:54: for(i=2;i<7;i+=2){
   008F 0C            [ 4]  200 	inc	c
   0090 0C            [ 4]  201 	inc	c
   0091 79            [ 4]  202 	ld	a,c
   0092 D6 07         [ 7]  203 	sub	a, #0x07
   0094 38 BF         [12]  204 	jr	C,00114$
                            205 ;src/Map.c:59: map[KING_LEVEL_EXIT_Y][KING_LEVEL_EXIT_X] = CELLTYPE_DOOR;
   0096 21 D4 88      [10]  206 	ld	hl,#0x88D4
   0099 36 80         [10]  207 	ld	(hl),#0x80
                            208 ;src/Map.c:62: while(player_get_direction_index()!=MOVEMENT_NORTH){
   009B                     209 00107$:
   009B CDr00r00      [17]  210 	call	_player_get_direction_index
   009E 7D            [ 4]  211 	ld	a,l
   009F D6 02         [ 7]  212 	sub	a, #0x02
   00A1 28 05         [12]  213 	jr	Z,00109$
                            214 ;src/Map.c:63: player_turn_left();
   00A3 CDr00r00      [17]  215 	call	_player_turn_left
   00A6 18 F3         [12]  216 	jr	00107$
   00A8                     217 00109$:
                            218 ;src/Map.c:66: *(i8*)&(player_position.x) = KING_LEVEL_PLAYER_X;
   00A8 21r00r00      [10]  219 	ld	hl,#_player_position
   00AB 36 04         [10]  220 	ld	(hl),#0x04
                            221 ;src/Map.c:67: *(i8*)&(player_position.y) = KING_LEVEL_PLAYER_Y;
   00AD 21r01r00      [10]  222 	ld	hl,#(_player_position + 0x0001)
   00B0 36 07         [10]  223 	ld	(hl),#0x07
   00B2 C9            [10]  224 	ret
                            225 ;src/Map.c:71: void generate_map(){
                            226 ;	---------------------------------
                            227 ; Function generate_map
                            228 ; ---------------------------------
   00B3                     229 _generate_map::
   00B3 DD E5         [15]  230 	push	ix
   00B5 DD 21 00 00   [14]  231 	ld	ix,#0
   00B9 DD 39         [15]  232 	add	ix,sp
   00BB 21 EC FF      [10]  233 	ld	hl,#-20
   00BE 39            [11]  234 	add	hl,sp
   00BF F9            [ 6]  235 	ld	sp,hl
                            236 ;src/Map.c:74: u16 remainingCells = MAP_SIZE-(MAP_WIDTH*2)-((MAP_HEIGHT-2)*2)-1;
   00C0 DD 36 F2 83   [19]  237 	ld	-14 (ix),#0x83
   00C4 DD 36 F3 03   [19]  238 	ld	-13 (ix),#0x03
                            239 ;src/Map.c:80: u16 wallListCount = 0;
   00C8 DD 36 EE 00   [19]  240 	ld	-18 (ix),#0x00
   00CC DD 36 EF 00   [19]  241 	ld	-17 (ix),#0x00
                            242 ;src/Map.c:81: u16 lastStackItem = 0;
   00D0 21 00 00      [10]  243 	ld	hl,#0x0000
   00D3 E3            [19]  244 	ex	(sp), hl
                            245 ;src/Map.c:83: cpct_memset (GENERATOR_DATA_PTR, 0, 4096);
   00D4 21 00 10      [10]  246 	ld	hl,#0x1000
   00D7 E5            [11]  247 	push	hl
   00D8 AF            [ 4]  248 	xor	a, a
   00D9 F5            [11]  249 	push	af
   00DA 33            [ 6]  250 	inc	sp
   00DB 21 D0 8C      [10]  251 	ld	hl,#0x8CD0
   00DE E5            [11]  252 	push	hl
   00DF CDr00r00      [17]  253 	call	_cpct_memset
                            254 ;src/Map.c:85: (*cellStack).x = (cpct_getRandom_mxor_u8 ()%(MAP_WIDTH-2))+1; //RANDOM
   00E2 CDr00r00      [17]  255 	call	_cpct_getRandom_mxor_u8
   00E5 45            [ 4]  256 	ld	b,l
   00E6 3E 1E         [ 7]  257 	ld	a,#0x1E
   00E8 F5            [11]  258 	push	af
   00E9 33            [ 6]  259 	inc	sp
   00EA C5            [11]  260 	push	bc
   00EB 33            [ 6]  261 	inc	sp
   00EC CDr00r00      [17]  262 	call	__moduchar
   00EF F1            [10]  263 	pop	af
   00F0 4D            [ 4]  264 	ld	c,l
   00F1 0C            [ 4]  265 	inc	c
   00F2 21 D0 8C      [10]  266 	ld	hl,#0x8CD0
   00F5 71            [ 7]  267 	ld	(hl),c
                            268 ;src/Map.c:86: (*cellStack).y = (cpct_getRandom_mxor_u8 ()%(MAP_HEIGHT-2))+1; //RANDOM
   00F6 CDr00r00      [17]  269 	call	_cpct_getRandom_mxor_u8
   00F9 45            [ 4]  270 	ld	b,l
   00FA 3E 1E         [ 7]  271 	ld	a,#0x1E
   00FC F5            [11]  272 	push	af
   00FD 33            [ 6]  273 	inc	sp
   00FE C5            [11]  274 	push	bc
   00FF 33            [ 6]  275 	inc	sp
   0100 CDr00r00      [17]  276 	call	__moduchar
   0103 F1            [10]  277 	pop	af
   0104 4D            [ 4]  278 	ld	c,l
   0105 0C            [ 4]  279 	inc	c
   0106 21 D1 8C      [10]  280 	ld	hl,#0x8CD1
   0109 71            [ 7]  281 	ld	(hl),c
                            282 ;src/Map.c:88: rotatePlayer = cpct_getRandom_mxor_u8 ()%4;
   010A CDr00r00      [17]  283 	call	_cpct_getRandom_mxor_u8
   010D 7D            [ 4]  284 	ld	a,l
   010E E6 03         [ 7]  285 	and	a, #0x03
   0110 4F            [ 4]  286 	ld	c,a
                            287 ;src/Map.c:89: while(rotatePlayer){
   0111                     288 00101$:
   0111 79            [ 4]  289 	ld	a,c
   0112 B7            [ 4]  290 	or	a, a
   0113 28 08         [12]  291 	jr	Z,00103$
                            292 ;src/Map.c:90: player_turn_left();
   0115 C5            [11]  293 	push	bc
   0116 CDr00r00      [17]  294 	call	_player_turn_left
   0119 C1            [10]  295 	pop	bc
                            296 ;src/Map.c:91: --rotatePlayer;
   011A 0D            [ 4]  297 	dec	c
   011B 18 F4         [12]  298 	jr	00101$
   011D                     299 00103$:
                            300 ;src/Map.c:94: *(i8*)&(player_position.x) = (*cellStack).y;
   011D 01r00r00      [10]  301 	ld	bc,#_player_position+0
   0120 3A D1 8C      [13]  302 	ld	a,(#0x8CD1)
   0123 02            [ 7]  303 	ld	(bc),a
                            304 ;src/Map.c:95: *(i8*)&(player_position.y) = (*cellStack).x;
   0124 01r01r00      [10]  305 	ld	bc,#_player_position+1
   0127 3A D0 8C      [13]  306 	ld	a,(#0x8CD0)
   012A 02            [ 7]  307 	ld	(bc),a
                            308 ;src/Map.c:97: cpct_memset (MAP_MEM,CELLTYPE_UNDEFINED,MAP_SIZE);
   012B 21 00 04      [10]  309 	ld	hl,#0x0400
   012E E5            [11]  310 	push	hl
   012F 3E 87         [ 7]  311 	ld	a,#0x87
   0131 F5            [11]  312 	push	af
   0132 33            [ 6]  313 	inc	sp
   0133 21 D0 88      [10]  314 	ld	hl,#0x88D0
   0136 E5            [11]  315 	push	hl
   0137 CDr00r00      [17]  316 	call	_cpct_memset
                            317 ;src/Map.c:100: map[(*cellStack).x][(*cellStack).y] = CELLTYPE_FLOOR;
   013A 21 D0 8C      [10]  318 	ld	hl,#0x8CD0
   013D 6E            [ 7]  319 	ld	l,(hl)
   013E 26 00         [ 7]  320 	ld	h,#0x00
   0140 29            [11]  321 	add	hl, hl
   0141 29            [11]  322 	add	hl, hl
   0142 29            [11]  323 	add	hl, hl
   0143 29            [11]  324 	add	hl, hl
   0144 29            [11]  325 	add	hl, hl
   0145 01 D0 88      [10]  326 	ld	bc,#0x88D0
   0148 09            [11]  327 	add	hl,bc
   0149 4D            [ 4]  328 	ld	c,l
   014A 44            [ 4]  329 	ld	b,h
   014B 21 D1 8C      [10]  330 	ld	hl,#0x8CD1
   014E 6E            [ 7]  331 	ld	l, (hl)
   014F 26 00         [ 7]  332 	ld	h,#0x00
   0151 09            [11]  333 	add	hl,bc
   0152 36 00         [10]  334 	ld	(hl),#0x00
                            335 ;src/Map.c:103: for(i=0;i<MAP_WIDTH;++i){
   0154 0E 00         [ 7]  336 	ld	c,#0x00
   0156                     337 00170$:
                            338 ;src/Map.c:104: map[0][i]=CELLTYPE_WALL1;//get_random_wall();
   0156 21 D0 88      [10]  339 	ld	hl,#0x88D0
   0159 06 00         [ 7]  340 	ld	b,#0x00
   015B 09            [11]  341 	add	hl, bc
   015C 36 81         [10]  342 	ld	(hl),#0x81
                            343 ;src/Map.c:105: map[MAP_HEIGHT-1][i]=CELLTYPE_WALL1;//get_random_wall();
   015E 21 B0 8C      [10]  344 	ld	hl,#0x8CB0
   0161 06 00         [ 7]  345 	ld	b,#0x00
   0163 09            [11]  346 	add	hl, bc
   0164 36 81         [10]  347 	ld	(hl),#0x81
                            348 ;src/Map.c:103: for(i=0;i<MAP_WIDTH;++i){
   0166 0C            [ 4]  349 	inc	c
   0167 79            [ 4]  350 	ld	a,c
   0168 D6 20         [ 7]  351 	sub	a, #0x20
   016A 38 EA         [12]  352 	jr	C,00170$
                            353 ;src/Map.c:108: for(i=0;i<MAP_HEIGHT-1;++i){
   016C 0E 00         [ 7]  354 	ld	c,#0x00
   016E                     355 00172$:
                            356 ;src/Map.c:109: map[i][0]=CELLTYPE_WALL1;//get_random_wall();
   016E 69            [ 4]  357 	ld	l,c
   016F 26 00         [ 7]  358 	ld	h,#0x00
   0171 29            [11]  359 	add	hl, hl
   0172 29            [11]  360 	add	hl, hl
   0173 29            [11]  361 	add	hl, hl
   0174 29            [11]  362 	add	hl, hl
   0175 29            [11]  363 	add	hl, hl
   0176 EB            [ 4]  364 	ex	de,hl
   0177 21 D0 88      [10]  365 	ld	hl,#0x88D0
   017A 19            [11]  366 	add	hl,de
   017B 36 81         [10]  367 	ld	(hl),#0x81
                            368 ;src/Map.c:110: map[i][MAP_WIDTH-1]=CELLTYPE_WALL1;//get_random_wall();
   017D 21 D0 88      [10]  369 	ld	hl,#0x88D0
   0180 19            [11]  370 	add	hl,de
   0181 11 1F 00      [10]  371 	ld	de,#0x001F
   0184 19            [11]  372 	add	hl,de
   0185 36 81         [10]  373 	ld	(hl),#0x81
                            374 ;src/Map.c:108: for(i=0;i<MAP_HEIGHT-1;++i){
   0187 0C            [ 4]  375 	inc	c
   0188 79            [ 4]  376 	ld	a,c
   0189 D6 1F         [ 7]  377 	sub	a, #0x1F
   018B 38 E1         [12]  378 	jr	C,00172$
                            379 ;src/Map.c:113: while(remainingCells>0){
   018D 21 04 00      [10]  380 	ld	hl,#0x0004
   0190 39            [11]  381 	add	hl,sp
   0191 DD 75 FA      [19]  382 	ld	-6 (ix),l
   0194 DD 74 FB      [19]  383 	ld	-5 (ix),h
   0197                     384 00167$:
   0197 DD 7E F3      [19]  385 	ld	a,-13 (ix)
   019A DD B6 F2      [19]  386 	or	a,-14 (ix)
   019D CAr66r05      [10]  387 	jp	Z,00174$
                            388 ;src/Map.c:114: wallListPosition = wallList+wallListCount;
   01A0 C1            [10]  389 	pop	bc
   01A1 E1            [10]  390 	pop	hl
   01A2 E5            [11]  391 	push	hl
   01A3 C5            [11]  392 	push	bc
   01A4 29            [11]  393 	add	hl, hl
   01A5 7D            [ 4]  394 	ld	a,l
   01A6 C6 D0         [ 7]  395 	add	a, #0xD0
   01A8 DD 77 FC      [19]  396 	ld	-4 (ix),a
   01AB 7C            [ 4]  397 	ld	a,h
   01AC CE 90         [ 7]  398 	adc	a, #0x90
   01AE DD 77 FD      [19]  399 	ld	-3 (ix),a
                            400 ;src/Map.c:115: while(wallListCount<MAP_SIZE){
   01B1 D1            [10]  401 	pop	de
   01B2 C1            [10]  402 	pop	bc
   01B3 C5            [11]  403 	push	bc
   01B4 D5            [11]  404 	push	de
   01B5                     405 00137$:
                            406 ;src/Map.c:118: currentPos.y = (*wallListPosition).y;
   01B5 DD 7E FA      [19]  407 	ld	a,-6 (ix)
   01B8 C6 01         [ 7]  408 	add	a, #0x01
   01BA DD 77 FE      [19]  409 	ld	-2 (ix),a
   01BD DD 7E FB      [19]  410 	ld	a,-5 (ix)
   01C0 CE 00         [ 7]  411 	adc	a, #0x00
   01C2 DD 77 FF      [19]  412 	ld	-1 (ix),a
                            413 ;src/Map.c:115: while(wallListCount<MAP_SIZE){
   01C5 78            [ 4]  414 	ld	a,b
   01C6 D6 04         [ 7]  415 	sub	a, #0x04
   01C8 D2r67r03      [10]  416 	jp	NC,00209$
                            417 ;src/Map.c:117: currentPos.x = (*wallListPosition).x;
   01CB 21 04 00      [10]  418 	ld	hl,#0x0004
   01CE 39            [11]  419 	add	hl,sp
   01CF EB            [ 4]  420 	ex	de,hl
   01D0 DD 6E FC      [19]  421 	ld	l,-4 (ix)
   01D3 DD 66 FD      [19]  422 	ld	h,-3 (ix)
   01D6 7E            [ 7]  423 	ld	a,(hl)
   01D7 12            [ 7]  424 	ld	(de),a
                            425 ;src/Map.c:118: currentPos.y = (*wallListPosition).y;
   01D8 DD 5E FC      [19]  426 	ld	e,-4 (ix)
   01DB DD 56 FD      [19]  427 	ld	d,-3 (ix)
   01DE 13            [ 6]  428 	inc	de
   01DF 1A            [ 7]  429 	ld	a,(de)
   01E0 DD 6E FE      [19]  430 	ld	l,-2 (ix)
   01E3 DD 66 FF      [19]  431 	ld	h,-1 (ix)
   01E6 77            [ 7]  432 	ld	(hl),a
                            433 ;src/Map.c:120: convertToFloor=0;
   01E7 DD 36 F4 00   [19]  434 	ld	-12 (ix),#0x00
                            435 ;src/Map.c:121: surroundedByWalls=1;
   01EB DD 36 F5 01   [19]  436 	ld	-11 (ix),#0x01
                            437 ;src/Map.c:123: if(currentPos.x>0){
   01EF DD 6E FA      [19]  438 	ld	l,-6 (ix)
   01F2 DD 66 FB      [19]  439 	ld	h,-5 (ix)
   01F5 7E            [ 7]  440 	ld	a,(hl)
   01F6 DD 77 F8      [19]  441 	ld	-8 (ix),a
                            442 ;src/Map.c:124: adjacentType = map[currentPos.x-1][currentPos.y];
   01F9 DD 6E FE      [19]  443 	ld	l,-2 (ix)
   01FC DD 66 FF      [19]  444 	ld	h,-1 (ix)
   01FF 7E            [ 7]  445 	ld	a,(hl)
   0200 DD 77 F9      [19]  446 	ld	-7 (ix),a
   0203 DD 7E F8      [19]  447 	ld	a,-8 (ix)
   0206 DD 77 F6      [19]  448 	ld	-10 (ix),a
   0209 DD 36 F7 00   [19]  449 	ld	-9 (ix),#0x00
                            450 ;src/Map.c:123: if(currentPos.x>0){
   020D DD 7E F8      [19]  451 	ld	a,-8 (ix)
   0210 B7            [ 4]  452 	or	a, a
   0211 28 2F         [12]  453 	jr	Z,00112$
                            454 ;src/Map.c:124: adjacentType = map[currentPos.x-1][currentPos.y];
   0213 DD 6E F6      [19]  455 	ld	l,-10 (ix)
   0216 DD 66 F7      [19]  456 	ld	h,-9 (ix)
   0219 2B            [ 6]  457 	dec	hl
   021A 29            [11]  458 	add	hl, hl
   021B 29            [11]  459 	add	hl, hl
   021C 29            [11]  460 	add	hl, hl
   021D 29            [11]  461 	add	hl, hl
   021E 29            [11]  462 	add	hl, hl
   021F D5            [11]  463 	push	de
   0220 11 D0 88      [10]  464 	ld	de,#0x88D0
   0223 19            [11]  465 	add	hl, de
   0224 D1            [10]  466 	pop	de
   0225 7D            [ 4]  467 	ld	a,l
   0226 DD 86 F9      [19]  468 	add	a, -7 (ix)
   0229 6F            [ 4]  469 	ld	l,a
   022A 7C            [ 4]  470 	ld	a,h
   022B CE 00         [ 7]  471 	adc	a, #0x00
   022D 67            [ 4]  472 	ld	h,a
   022E 6E            [ 7]  473 	ld	l,(hl)
                            474 ;src/Map.c:125: if(adjacentType == CELLTYPE_UNDEFINED){
   022F 7D            [ 4]  475 	ld	a,l
   0230 D6 87         [ 7]  476 	sub	a, #0x87
   0232 20 06         [12]  477 	jr	NZ,00109$
                            478 ;src/Map.c:126: convertToFloor  = 1;
   0234 DD 36 F4 01   [19]  479 	ld	-12 (ix),#0x01
   0238 18 08         [12]  480 	jr	00112$
   023A                     481 00109$:
                            482 ;src/Map.c:128: else if(adjacentType == CELLTYPE_FLOOR){
   023A 7D            [ 4]  483 	ld	a,l
   023B B7            [ 4]  484 	or	a, a
   023C 20 04         [12]  485 	jr	NZ,00112$
                            486 ;src/Map.c:129: surroundedByWalls = 0;
   023E DD 36 F5 00   [19]  487 	ld	-11 (ix),#0x00
   0242                     488 00112$:
                            489 ;src/Map.c:132: if(currentPos.x < (MAP_WIDTH-1)){
   0242 DD 7E F8      [19]  490 	ld	a,-8 (ix)
   0245 D6 1F         [ 7]  491 	sub	a, #0x1F
   0247 30 2F         [12]  492 	jr	NC,00119$
                            493 ;src/Map.c:134: adjacentType = map[currentPos.x+1][currentPos.y];
   0249 DD 6E F6      [19]  494 	ld	l,-10 (ix)
   024C DD 66 F7      [19]  495 	ld	h,-9 (ix)
   024F 23            [ 6]  496 	inc	hl
   0250 29            [11]  497 	add	hl, hl
   0251 29            [11]  498 	add	hl, hl
   0252 29            [11]  499 	add	hl, hl
   0253 29            [11]  500 	add	hl, hl
   0254 29            [11]  501 	add	hl, hl
   0255 D5            [11]  502 	push	de
   0256 11 D0 88      [10]  503 	ld	de,#0x88D0
   0259 19            [11]  504 	add	hl, de
   025A D1            [10]  505 	pop	de
   025B 7D            [ 4]  506 	ld	a,l
   025C DD 86 F9      [19]  507 	add	a, -7 (ix)
   025F 6F            [ 4]  508 	ld	l,a
   0260 7C            [ 4]  509 	ld	a,h
   0261 CE 00         [ 7]  510 	adc	a, #0x00
   0263 67            [ 4]  511 	ld	h,a
   0264 6E            [ 7]  512 	ld	l,(hl)
                            513 ;src/Map.c:135: if(adjacentType == CELLTYPE_UNDEFINED){
   0265 7D            [ 4]  514 	ld	a,l
   0266 D6 87         [ 7]  515 	sub	a, #0x87
   0268 20 06         [12]  516 	jr	NZ,00116$
                            517 ;src/Map.c:136: convertToFloor  = 1;
   026A DD 36 F4 01   [19]  518 	ld	-12 (ix),#0x01
   026E 18 08         [12]  519 	jr	00119$
   0270                     520 00116$:
                            521 ;src/Map.c:138: else if(adjacentType == CELLTYPE_FLOOR){
   0270 7D            [ 4]  522 	ld	a,l
   0271 B7            [ 4]  523 	or	a, a
   0272 20 04         [12]  524 	jr	NZ,00119$
                            525 ;src/Map.c:139: surroundedByWalls = 0;
   0274 DD 36 F5 00   [19]  526 	ld	-11 (ix),#0x00
   0278                     527 00119$:
                            528 ;src/Map.c:144: adjacentType = map[currentPos.x][currentPos.y-1];
   0278 DD 6E F6      [19]  529 	ld	l,-10 (ix)
   027B DD 66 F7      [19]  530 	ld	h,-9 (ix)
   027E 29            [11]  531 	add	hl, hl
   027F 29            [11]  532 	add	hl, hl
   0280 29            [11]  533 	add	hl, hl
   0281 29            [11]  534 	add	hl, hl
   0282 29            [11]  535 	add	hl, hl
   0283 7D            [ 4]  536 	ld	a,l
   0284 C6 D0         [ 7]  537 	add	a, #0xD0
   0286 DD 77 F6      [19]  538 	ld	-10 (ix),a
   0289 7C            [ 4]  539 	ld	a,h
   028A CE 88         [ 7]  540 	adc	a, #0x88
   028C DD 77 F7      [19]  541 	ld	-9 (ix),a
                            542 ;src/Map.c:142: if(currentPos.y > 0){
   028F DD 7E F9      [19]  543 	ld	a,-7 (ix)
   0292 B7            [ 4]  544 	or	a, a
   0293 28 23         [12]  545 	jr	Z,00126$
                            546 ;src/Map.c:144: adjacentType = map[currentPos.x][currentPos.y-1];
   0295 DD 6E F9      [19]  547 	ld	l,-7 (ix)
   0298 2D            [ 4]  548 	dec	l
   0299 DD 7E F6      [19]  549 	ld	a,-10 (ix)
   029C 85            [ 4]  550 	add	a, l
   029D 6F            [ 4]  551 	ld	l,a
   029E DD 7E F7      [19]  552 	ld	a,-9 (ix)
   02A1 CE 00         [ 7]  553 	adc	a, #0x00
   02A3 67            [ 4]  554 	ld	h,a
   02A4 6E            [ 7]  555 	ld	l,(hl)
                            556 ;src/Map.c:145: if(adjacentType == CELLTYPE_UNDEFINED){
   02A5 7D            [ 4]  557 	ld	a,l
   02A6 D6 87         [ 7]  558 	sub	a, #0x87
   02A8 20 06         [12]  559 	jr	NZ,00123$
                            560 ;src/Map.c:146: convertToFloor  = 1;
   02AA DD 36 F4 01   [19]  561 	ld	-12 (ix),#0x01
   02AE 18 08         [12]  562 	jr	00126$
   02B0                     563 00123$:
                            564 ;src/Map.c:148: else if(adjacentType == CELLTYPE_FLOOR){
   02B0 7D            [ 4]  565 	ld	a,l
   02B1 B7            [ 4]  566 	or	a, a
   02B2 20 04         [12]  567 	jr	NZ,00126$
                            568 ;src/Map.c:149: surroundedByWalls = 0;
   02B4 DD 36 F5 00   [19]  569 	ld	-11 (ix),#0x00
   02B8                     570 00126$:
                            571 ;src/Map.c:152: if(currentPos.y < (MAP_HEIGHT-1)){
   02B8 DD 7E F9      [19]  572 	ld	a,-7 (ix)
   02BB D6 1F         [ 7]  573 	sub	a, #0x1F
   02BD 30 23         [12]  574 	jr	NC,00133$
                            575 ;src/Map.c:154: adjacentType = map[currentPos.x][currentPos.y+1];
   02BF DD 6E F9      [19]  576 	ld	l,-7 (ix)
   02C2 2C            [ 4]  577 	inc	l
   02C3 DD 7E F6      [19]  578 	ld	a,-10 (ix)
   02C6 85            [ 4]  579 	add	a, l
   02C7 6F            [ 4]  580 	ld	l,a
   02C8 DD 7E F7      [19]  581 	ld	a,-9 (ix)
   02CB CE 00         [ 7]  582 	adc	a, #0x00
   02CD 67            [ 4]  583 	ld	h,a
   02CE 6E            [ 7]  584 	ld	l,(hl)
                            585 ;src/Map.c:155: if(adjacentType == CELLTYPE_UNDEFINED){
   02CF 7D            [ 4]  586 	ld	a,l
   02D0 D6 87         [ 7]  587 	sub	a, #0x87
   02D2 20 06         [12]  588 	jr	NZ,00130$
                            589 ;src/Map.c:156: convertToFloor  = 1;
   02D4 DD 36 F4 01   [19]  590 	ld	-12 (ix),#0x01
   02D8 18 08         [12]  591 	jr	00133$
   02DA                     592 00130$:
                            593 ;src/Map.c:158: else if(adjacentType == CELLTYPE_FLOOR){
   02DA 7D            [ 4]  594 	ld	a,l
   02DB B7            [ 4]  595 	or	a, a
   02DC 20 04         [12]  596 	jr	NZ,00133$
                            597 ;src/Map.c:159: surroundedByWalls = 0;
   02DE DD 36 F5 00   [19]  598 	ld	-11 (ix),#0x00
   02E2                     599 00133$:
                            600 ;src/Map.c:163: (*wallListPosition).x = (*(wallList+wallListCount)).x;
   02E2 69            [ 4]  601 	ld	l, c
   02E3 60            [ 4]  602 	ld	h, b
   02E4 29            [11]  603 	add	hl, hl
   02E5 FD 21 D0 90   [14]  604 	ld	iy,#0x90D0
   02E9 C5            [11]  605 	push	bc
   02EA 4D            [ 4]  606 	ld	c, l
   02EB 44            [ 4]  607 	ld	b, h
   02EC FD 09         [15]  608 	add	iy, bc
   02EE C1            [10]  609 	pop	bc
   02EF FD 7E 00      [19]  610 	ld	a, 0 (iy)
   02F2 DD 6E FC      [19]  611 	ld	l,-4 (ix)
   02F5 DD 66 FD      [19]  612 	ld	h,-3 (ix)
   02F8 77            [ 7]  613 	ld	(hl),a
                            614 ;src/Map.c:164: (*wallListPosition).y = (*(wallList+wallListCount)).y;
   02F9 FD E5         [15]  615 	push	iy
   02FB E1            [10]  616 	pop	hl
   02FC 23            [ 6]  617 	inc	hl
   02FD 7E            [ 7]  618 	ld	a,(hl)
   02FE 12            [ 7]  619 	ld	(de),a
                            620 ;src/Map.c:165: --wallListCount;
   02FF 0B            [ 6]  621 	dec	bc
   0300 DD 71 EE      [19]  622 	ld	-18 (ix),c
   0303 DD 70 EF      [19]  623 	ld	-17 (ix),b
                            624 ;src/Map.c:168: if((convertToFloor)&&(!surroundedByWalls)){
   0306 DD 7E F4      [19]  625 	ld	a,-12 (ix)
   0309 B7            [ 4]  626 	or	a, a
   030A 28 4A         [12]  627 	jr	Z,00135$
   030C DD 7E F5      [19]  628 	ld	a,-11 (ix)
   030F B7            [ 4]  629 	or	a, a
   0310 20 44         [12]  630 	jr	NZ,00135$
                            631 ;src/Map.c:169: map[currentPos.x][currentPos.y] = CELLTYPE_FLOOR;
   0312 DD 6E FA      [19]  632 	ld	l,-6 (ix)
   0315 DD 66 FB      [19]  633 	ld	h,-5 (ix)
   0318 6E            [ 7]  634 	ld	l,(hl)
   0319 26 00         [ 7]  635 	ld	h,#0x00
   031B 29            [11]  636 	add	hl, hl
   031C 29            [11]  637 	add	hl, hl
   031D 29            [11]  638 	add	hl, hl
   031E 29            [11]  639 	add	hl, hl
   031F 29            [11]  640 	add	hl, hl
   0320 01 D0 88      [10]  641 	ld	bc,#0x88D0
   0323 09            [11]  642 	add	hl,bc
   0324 4D            [ 4]  643 	ld	c,l
   0325 44            [ 4]  644 	ld	b,h
   0326 DD 6E FE      [19]  645 	ld	l,-2 (ix)
   0329 DD 66 FF      [19]  646 	ld	h,-1 (ix)
   032C 6E            [ 7]  647 	ld	l, (hl)
   032D 26 00         [ 7]  648 	ld	h,#0x00
   032F 09            [11]  649 	add	hl,bc
   0330 36 00         [10]  650 	ld	(hl),#0x00
                            651 ;src/Map.c:171: ++lastStackItem;
   0332 DD 34 EC      [23]  652 	inc	-20 (ix)
   0335 20 03         [12]  653 	jr	NZ,00334$
   0337 DD 34 ED      [23]  654 	inc	-19 (ix)
   033A                     655 00334$:
                            656 ;src/Map.c:172: (*(cellStack+lastStackItem)).x = currentPos.x;
   033A E1            [10]  657 	pop	hl
   033B E5            [11]  658 	push	hl
   033C 29            [11]  659 	add	hl, hl
   033D 01 D0 8C      [10]  660 	ld	bc, #0x8CD0
   0340 09            [11]  661 	add	hl,bc
   0341 4D            [ 4]  662 	ld	c, l
   0342 44            [ 4]  663 	ld	b, h
   0343 DD 6E FA      [19]  664 	ld	l,-6 (ix)
   0346 DD 66 FB      [19]  665 	ld	h,-5 (ix)
   0349 7E            [ 7]  666 	ld	a,(hl)
   034A 02            [ 7]  667 	ld	(bc),a
                            668 ;src/Map.c:173: (*(cellStack+lastStackItem)).y = currentPos.y;
   034B 03            [ 6]  669 	inc	bc
   034C DD 6E FE      [19]  670 	ld	l,-2 (ix)
   034F DD 66 FF      [19]  671 	ld	h,-1 (ix)
   0352 7E            [ 7]  672 	ld	a,(hl)
   0353 02            [ 7]  673 	ld	(bc),a
                            674 ;src/Map.c:176: break;
   0354 18 11         [12]  675 	jr	00209$
   0356                     676 00135$:
                            677 ;src/Map.c:178: --wallListPosition;
   0356 DD 6E FC      [19]  678 	ld	l,-4 (ix)
   0359 DD 66 FD      [19]  679 	ld	h,-3 (ix)
   035C 2B            [ 6]  680 	dec	hl
   035D 2B            [ 6]  681 	dec	hl
   035E DD 75 FC      [19]  682 	ld	-4 (ix),l
   0361 DD 74 FD      [19]  683 	ld	-3 (ix),h
   0364 C3rB5r01      [10]  684 	jp	00137$
                            685 ;src/Map.c:180: while(lastStackItem<MAP_SIZE){
   0367                     686 00209$:
   0367 DD 7E F2      [19]  687 	ld	a,-14 (ix)
   036A DD 77 F6      [19]  688 	ld	-10 (ix),a
   036D DD 7E F3      [19]  689 	ld	a,-13 (ix)
   0370 DD 77 F7      [19]  690 	ld	-9 (ix),a
   0373 DD 7E EE      [19]  691 	ld	a,-18 (ix)
   0376 DD 77 FC      [19]  692 	ld	-4 (ix),a
   0379 DD 7E EF      [19]  693 	ld	a,-17 (ix)
   037C DD 77 FD      [19]  694 	ld	-3 (ix),a
   037F                     695 00164$:
   037F DD 7E ED      [19]  696 	ld	a,-19 (ix)
   0382 D6 04         [ 7]  697 	sub	a, #0x04
   0384 D2r97r01      [10]  698 	jp	NC,00167$
                            699 ;src/Map.c:181: currentPos.x=(*(lastStackItem+cellStack)).x;
   0387 21 04 00      [10]  700 	ld	hl,#0x0004
   038A 39            [11]  701 	add	hl,sp
   038B 4D            [ 4]  702 	ld	c,l
   038C 44            [ 4]  703 	ld	b,h
   038D E1            [10]  704 	pop	hl
   038E E5            [11]  705 	push	hl
   038F 29            [11]  706 	add	hl, hl
   0390 FD 21 D0 8C   [14]  707 	ld	iy,#0x8CD0
   0394 EB            [ 4]  708 	ex	de,hl
   0395 FD 19         [15]  709 	add	iy, de
   0397 FD 7E 00      [19]  710 	ld	a, 0 (iy)
   039A 02            [ 7]  711 	ld	(bc),a
                            712 ;src/Map.c:182: currentPos.y=(*(lastStackItem+cellStack)).y;
   039B FD 4E 01      [19]  713 	ld	c,1 (iy)
   039E DD 6E FE      [19]  714 	ld	l,-2 (ix)
   03A1 DD 66 FF      [19]  715 	ld	h,-1 (ix)
   03A4 71            [ 7]  716 	ld	(hl),c
                            717 ;src/Map.c:183: --lastStackItem;
   03A5 E1            [10]  718 	pop	hl
   03A6 E5            [11]  719 	push	hl
   03A7 2B            [ 6]  720 	dec	hl
   03A8 E3            [19]  721 	ex	(sp), hl
                            722 ;src/Map.c:184: cellType = map[currentPos.x][currentPos.y];
   03A9 DD 6E FA      [19]  723 	ld	l,-6 (ix)
   03AC DD 66 FB      [19]  724 	ld	h,-5 (ix)
   03AF 6E            [ 7]  725 	ld	l,(hl)
   03B0 26 00         [ 7]  726 	ld	h,#0x00
   03B2 29            [11]  727 	add	hl, hl
   03B3 29            [11]  728 	add	hl, hl
   03B4 29            [11]  729 	add	hl, hl
   03B5 29            [11]  730 	add	hl, hl
   03B6 29            [11]  731 	add	hl, hl
   03B7 11 D0 88      [10]  732 	ld	de,#0x88D0
   03BA 19            [11]  733 	add	hl,de
   03BB 59            [ 4]  734 	ld	e,c
   03BC 16 00         [ 7]  735 	ld	d,#0x00
   03BE 19            [11]  736 	add	hl,de
   03BF 4E            [ 7]  737 	ld	c,(hl)
                            738 ;src/Map.c:186: if(cellType == CELLTYPE_UNDEFINED){
   03C0 79            [ 4]  739 	ld	a,c
   03C1 D6 87         [ 7]  740 	sub	a, #0x87
   03C3 20 47         [12]  741 	jr	NZ,00144$
                            742 ;src/Map.c:188: if(cpct_getRandom_mxor_u8 ()&1){//WALL
   03C5 CDr00r00      [17]  743 	call	_cpct_getRandom_mxor_u8
   03C8 CB 45         [ 8]  744 	bit	0, l
   03CA 28 06         [12]  745 	jr	Z,00141$
                            746 ;src/Map.c:189: cellType = get_random_wall();
   03CC CDr04r00      [17]  747 	call	_get_random_wall
   03CF 4D            [ 4]  748 	ld	c,l
   03D0 18 02         [12]  749 	jr	00142$
   03D2                     750 00141$:
                            751 ;src/Map.c:192: cellType = CELLTYPE_FLOOR;
   03D2 0E 00         [ 7]  752 	ld	c,#0x00
   03D4                     753 00142$:
                            754 ;src/Map.c:194: map[currentPos.x][currentPos.y]=cellType;
   03D4 DD 6E FA      [19]  755 	ld	l,-6 (ix)
   03D7 DD 66 FB      [19]  756 	ld	h,-5 (ix)
   03DA 6E            [ 7]  757 	ld	l,(hl)
   03DB 26 00         [ 7]  758 	ld	h,#0x00
   03DD 29            [11]  759 	add	hl, hl
   03DE 29            [11]  760 	add	hl, hl
   03DF 29            [11]  761 	add	hl, hl
   03E0 29            [11]  762 	add	hl, hl
   03E1 29            [11]  763 	add	hl, hl
   03E2 EB            [ 4]  764 	ex	de,hl
   03E3 21 D0 88      [10]  765 	ld	hl,#0x88D0
   03E6 19            [11]  766 	add	hl,de
   03E7 EB            [ 4]  767 	ex	de,hl
   03E8 DD 6E FE      [19]  768 	ld	l,-2 (ix)
   03EB DD 66 FF      [19]  769 	ld	h,-1 (ix)
   03EE 6E            [ 7]  770 	ld	l, (hl)
   03EF 26 00         [ 7]  771 	ld	h,#0x00
   03F1 19            [11]  772 	add	hl,de
   03F2 71            [ 7]  773 	ld	(hl),c
                            774 ;src/Map.c:195: --remainingCells;
   03F3 DD 6E F6      [19]  775 	ld	l,-10 (ix)
   03F6 DD 66 F7      [19]  776 	ld	h,-9 (ix)
   03F9 2B            [ 6]  777 	dec	hl
   03FA DD 75 F6      [19]  778 	ld	-10 (ix),l
   03FD DD 74 F7      [19]  779 	ld	-9 (ix),h
   0400 DD 7E F6      [19]  780 	ld	a,-10 (ix)
   0403 DD 77 F2      [19]  781 	ld	-14 (ix),a
   0406 DD 7E F7      [19]  782 	ld	a,-9 (ix)
   0409 DD 77 F3      [19]  783 	ld	-13 (ix),a
   040C                     784 00144$:
                            785 ;src/Map.c:123: if(currentPos.x>0){
   040C DD 6E FA      [19]  786 	ld	l,-6 (ix)
   040F DD 66 FB      [19]  787 	ld	h,-5 (ix)
   0412 7E            [ 7]  788 	ld	a,(hl)
   0413 DD 77 F9      [19]  789 	ld	-7 (ix),a
                            790 ;src/Map.c:198: if((cellType == CELLTYPE_FLOOR)){
   0416 79            [ 4]  791 	ld	a,c
   0417 B7            [ 4]  792 	or	a, a
   0418 C2r35r05      [10]  793 	jp	NZ,00162$
                            794 ;src/Map.c:199: if(currentPos.x>0){
   041B DD 7E F9      [19]  795 	ld	a,-7 (ix)
   041E B7            [ 4]  796 	or	a, a
   041F 28 3F         [12]  797 	jr	Z,00148$
                            798 ;src/Map.c:200: adjacentType = map[currentPos.x-1][currentPos.y];
   0421 DD 6E F9      [19]  799 	ld	l,-7 (ix)
   0424 26 00         [ 7]  800 	ld	h,#0x00
   0426 2B            [ 6]  801 	dec	hl
   0427 29            [11]  802 	add	hl, hl
   0428 29            [11]  803 	add	hl, hl
   0429 29            [11]  804 	add	hl, hl
   042A 29            [11]  805 	add	hl, hl
   042B 29            [11]  806 	add	hl, hl
   042C 01 D0 88      [10]  807 	ld	bc,#0x88D0
   042F 09            [11]  808 	add	hl,bc
   0430 4D            [ 4]  809 	ld	c,l
   0431 44            [ 4]  810 	ld	b,h
   0432 DD 6E FE      [19]  811 	ld	l,-2 (ix)
   0435 DD 66 FF      [19]  812 	ld	h,-1 (ix)
   0438 6E            [ 7]  813 	ld	l, (hl)
   0439 26 00         [ 7]  814 	ld	h,#0x00
   043B 09            [11]  815 	add	hl,bc
   043C 7E            [ 7]  816 	ld	a,(hl)
                            817 ;src/Map.c:201: if(adjacentType == CELLTYPE_UNDEFINED){
   043D D6 87         [ 7]  818 	sub	a, #0x87
   043F 20 1F         [12]  819 	jr	NZ,00148$
                            820 ;src/Map.c:203: ++lastStackItem;
   0441 DD 34 EC      [23]  821 	inc	-20 (ix)
   0444 20 03         [12]  822 	jr	NZ,00340$
   0446 DD 34 ED      [23]  823 	inc	-19 (ix)
   0449                     824 00340$:
                            825 ;src/Map.c:204: (*(cellStack+lastStackItem)).x = currentPos.x-1;
   0449 E1            [10]  826 	pop	hl
   044A E5            [11]  827 	push	hl
   044B 29            [11]  828 	add	hl, hl
   044C 01 D0 8C      [10]  829 	ld	bc,#0x8CD0
   044F 09            [11]  830 	add	hl,bc
   0450 DD 4E F9      [19]  831 	ld	c,-7 (ix)
   0453 0D            [ 4]  832 	dec	c
   0454 71            [ 7]  833 	ld	(hl),c
                            834 ;src/Map.c:205: (*(cellStack+lastStackItem)).y = currentPos.y;
   0455 23            [ 6]  835 	inc	hl
   0456 4D            [ 4]  836 	ld	c,l
   0457 44            [ 4]  837 	ld	b,h
   0458 DD 6E FE      [19]  838 	ld	l,-2 (ix)
   045B DD 66 FF      [19]  839 	ld	h,-1 (ix)
   045E 7E            [ 7]  840 	ld	a,(hl)
   045F 02            [ 7]  841 	ld	(bc),a
   0460                     842 00148$:
                            843 ;src/Map.c:209: if(currentPos.x < (MAP_WIDTH-1)){
   0460 DD 6E FA      [19]  844 	ld	l,-6 (ix)
   0463 DD 66 FB      [19]  845 	ld	h,-5 (ix)
   0466 4E            [ 7]  846 	ld	c,(hl)
   0467 79            [ 4]  847 	ld	a,c
   0468 D6 1F         [ 7]  848 	sub	a, #0x1F
   046A 30 3A         [12]  849 	jr	NC,00152$
                            850 ;src/Map.c:211: adjacentType = map[currentPos.x+1][currentPos.y];
   046C 69            [ 4]  851 	ld	l,c
   046D 26 00         [ 7]  852 	ld	h,#0x00
   046F 23            [ 6]  853 	inc	hl
   0470 29            [11]  854 	add	hl, hl
   0471 29            [11]  855 	add	hl, hl
   0472 29            [11]  856 	add	hl, hl
   0473 29            [11]  857 	add	hl, hl
   0474 29            [11]  858 	add	hl, hl
   0475 EB            [ 4]  859 	ex	de,hl
   0476 21 D0 88      [10]  860 	ld	hl,#0x88D0
   0479 19            [11]  861 	add	hl,de
   047A EB            [ 4]  862 	ex	de,hl
   047B DD 6E FE      [19]  863 	ld	l,-2 (ix)
   047E DD 66 FF      [19]  864 	ld	h,-1 (ix)
   0481 6E            [ 7]  865 	ld	l, (hl)
   0482 26 00         [ 7]  866 	ld	h,#0x00
   0484 19            [11]  867 	add	hl,de
   0485 7E            [ 7]  868 	ld	a,(hl)
                            869 ;src/Map.c:212: if(adjacentType == CELLTYPE_UNDEFINED){
   0486 D6 87         [ 7]  870 	sub	a, #0x87
   0488 20 1C         [12]  871 	jr	NZ,00152$
                            872 ;src/Map.c:215: ++lastStackItem;
   048A DD 34 EC      [23]  873 	inc	-20 (ix)
   048D 20 03         [12]  874 	jr	NZ,00343$
   048F DD 34 ED      [23]  875 	inc	-19 (ix)
   0492                     876 00343$:
                            877 ;src/Map.c:216: (*(cellStack+lastStackItem)).x = currentPos.x+1;
   0492 E1            [10]  878 	pop	hl
   0493 E5            [11]  879 	push	hl
   0494 29            [11]  880 	add	hl, hl
   0495 11 D0 8C      [10]  881 	ld	de,#0x8CD0
   0498 19            [11]  882 	add	hl,de
   0499 0C            [ 4]  883 	inc	c
   049A 71            [ 7]  884 	ld	(hl),c
                            885 ;src/Map.c:217: (*(cellStack+lastStackItem)).y = currentPos.y;
   049B 23            [ 6]  886 	inc	hl
   049C 4D            [ 4]  887 	ld	c,l
   049D 44            [ 4]  888 	ld	b,h
   049E DD 6E FE      [19]  889 	ld	l,-2 (ix)
   04A1 DD 66 FF      [19]  890 	ld	h,-1 (ix)
   04A4 7E            [ 7]  891 	ld	a,(hl)
   04A5 02            [ 7]  892 	ld	(bc),a
   04A6                     893 00152$:
                            894 ;src/Map.c:124: adjacentType = map[currentPos.x-1][currentPos.y];
   04A6 DD 6E FE      [19]  895 	ld	l,-2 (ix)
   04A9 DD 66 FF      [19]  896 	ld	h,-1 (ix)
   04AC 4E            [ 7]  897 	ld	c,(hl)
                            898 ;src/Map.c:221: if(currentPos.y > 0){
   04AD 79            [ 4]  899 	ld	a,c
   04AE B7            [ 4]  900 	or	a, a
   04AF 28 3A         [12]  901 	jr	Z,00156$
                            902 ;src/Map.c:223: adjacentType = map[currentPos.x][currentPos.y-1];
   04B1 DD 6E FA      [19]  903 	ld	l,-6 (ix)
   04B4 DD 66 FB      [19]  904 	ld	h,-5 (ix)
   04B7 46            [ 7]  905 	ld	b,(hl)
   04B8 68            [ 4]  906 	ld	l,b
   04B9 26 00         [ 7]  907 	ld	h,#0x00
   04BB 29            [11]  908 	add	hl, hl
   04BC 29            [11]  909 	add	hl, hl
   04BD 29            [11]  910 	add	hl, hl
   04BE 29            [11]  911 	add	hl, hl
   04BF 29            [11]  912 	add	hl, hl
   04C0 11 D0 88      [10]  913 	ld	de,#0x88D0
   04C3 19            [11]  914 	add	hl,de
   04C4 0D            [ 4]  915 	dec	c
   04C5 59            [ 4]  916 	ld	e,c
   04C6 16 00         [ 7]  917 	ld	d,#0x00
   04C8 19            [11]  918 	add	hl,de
   04C9 7E            [ 7]  919 	ld	a,(hl)
                            920 ;src/Map.c:224: if(adjacentType == CELLTYPE_UNDEFINED){
   04CA D6 87         [ 7]  921 	sub	a, #0x87
   04CC 20 1D         [12]  922 	jr	NZ,00156$
                            923 ;src/Map.c:227: ++lastStackItem;
   04CE DD 34 EC      [23]  924 	inc	-20 (ix)
   04D1 20 03         [12]  925 	jr	NZ,00346$
   04D3 DD 34 ED      [23]  926 	inc	-19 (ix)
   04D6                     927 00346$:
                            928 ;src/Map.c:228: (*(cellStack+lastStackItem)).x = currentPos.x;
   04D6 E1            [10]  929 	pop	hl
   04D7 E5            [11]  930 	push	hl
   04D8 29            [11]  931 	add	hl, hl
   04D9 11 D0 8C      [10]  932 	ld	de,#0x8CD0
   04DC 19            [11]  933 	add	hl,de
   04DD 70            [ 7]  934 	ld	(hl),b
                            935 ;src/Map.c:229: (*(cellStack+lastStackItem)).y = currentPos.y-1;
   04DE 23            [ 6]  936 	inc	hl
   04DF 4D            [ 4]  937 	ld	c,l
   04E0 44            [ 4]  938 	ld	b,h
   04E1 DD 6E FE      [19]  939 	ld	l,-2 (ix)
   04E4 DD 66 FF      [19]  940 	ld	h,-1 (ix)
   04E7 5E            [ 7]  941 	ld	e,(hl)
   04E8 1D            [ 4]  942 	dec	e
   04E9 7B            [ 4]  943 	ld	a,e
   04EA 02            [ 7]  944 	ld	(bc),a
   04EB                     945 00156$:
                            946 ;src/Map.c:124: adjacentType = map[currentPos.x-1][currentPos.y];
   04EB DD 6E FE      [19]  947 	ld	l,-2 (ix)
   04EE DD 66 FF      [19]  948 	ld	h,-1 (ix)
   04F1 46            [ 7]  949 	ld	b,(hl)
                            950 ;src/Map.c:233: if(currentPos.y < (MAP_HEIGHT-1)){
   04F2 78            [ 4]  951 	ld	a,b
   04F3 D6 1F         [ 7]  952 	sub	a, #0x1F
   04F5 D2r7Fr03      [10]  953 	jp	NC,00164$
                            954 ;src/Map.c:235: adjacentType = map[currentPos.x][currentPos.y+1];
   04F8 DD 6E FA      [19]  955 	ld	l,-6 (ix)
   04FB DD 66 FB      [19]  956 	ld	h,-5 (ix)
   04FE 4E            [ 7]  957 	ld	c,(hl)
   04FF 69            [ 4]  958 	ld	l,c
   0500 26 00         [ 7]  959 	ld	h,#0x00
   0502 29            [11]  960 	add	hl, hl
   0503 29            [11]  961 	add	hl, hl
   0504 29            [11]  962 	add	hl, hl
   0505 29            [11]  963 	add	hl, hl
   0506 29            [11]  964 	add	hl, hl
   0507 11 D0 88      [10]  965 	ld	de,#0x88D0
   050A 19            [11]  966 	add	hl,de
   050B 04            [ 4]  967 	inc	b
   050C 58            [ 4]  968 	ld	e,b
   050D 16 00         [ 7]  969 	ld	d,#0x00
   050F 19            [11]  970 	add	hl,de
   0510 7E            [ 7]  971 	ld	a,(hl)
                            972 ;src/Map.c:236: if(adjacentType == CELLTYPE_UNDEFINED){
   0511 D6 87         [ 7]  973 	sub	a, #0x87
   0513 C2r7Fr03      [10]  974 	jp	NZ,00164$
                            975 ;src/Map.c:239: ++lastStackItem;
   0516 DD 34 EC      [23]  976 	inc	-20 (ix)
   0519 20 03         [12]  977 	jr	NZ,00349$
   051B DD 34 ED      [23]  978 	inc	-19 (ix)
   051E                     979 00349$:
                            980 ;src/Map.c:240: (*(cellStack+lastStackItem)).x = currentPos.x;
   051E E1            [10]  981 	pop	hl
   051F E5            [11]  982 	push	hl
   0520 29            [11]  983 	add	hl, hl
   0521 11 D0 8C      [10]  984 	ld	de,#0x8CD0
   0524 19            [11]  985 	add	hl,de
   0525 71            [ 7]  986 	ld	(hl),c
                            987 ;src/Map.c:241: (*(cellStack+lastStackItem)).y = currentPos.y+1;
   0526 23            [ 6]  988 	inc	hl
   0527 4D            [ 4]  989 	ld	c,l
   0528 44            [ 4]  990 	ld	b,h
   0529 DD 6E FE      [19]  991 	ld	l,-2 (ix)
   052C DD 66 FF      [19]  992 	ld	h,-1 (ix)
   052F 7E            [ 7]  993 	ld	a,(hl)
   0530 3C            [ 4]  994 	inc	a
   0531 02            [ 7]  995 	ld	(bc),a
   0532 C3r7Fr03      [10]  996 	jp	00164$
   0535                     997 00162$:
                            998 ;src/Map.c:247: ++wallListCount;
   0535 DD 34 FC      [23]  999 	inc	-4 (ix)
   0538 20 03         [12] 1000 	jr	NZ,00350$
   053A DD 34 FD      [23] 1001 	inc	-3 (ix)
   053D                    1002 00350$:
   053D DD 7E FC      [19] 1003 	ld	a,-4 (ix)
   0540 DD 77 EE      [19] 1004 	ld	-18 (ix),a
   0543 DD 7E FD      [19] 1005 	ld	a,-3 (ix)
   0546 DD 77 EF      [19] 1006 	ld	-17 (ix),a
                           1007 ;src/Map.c:248: (*(wallList+wallListCount)).x = currentPos.x;
   0549 DD 6E FC      [19] 1008 	ld	l,-4 (ix)
   054C DD 66 FD      [19] 1009 	ld	h,-3 (ix)
   054F 29            [11] 1010 	add	hl, hl
   0550 01 D0 90      [10] 1011 	ld	bc,#0x90D0
   0553 09            [11] 1012 	add	hl,bc
   0554 DD 7E F9      [19] 1013 	ld	a,-7 (ix)
   0557 77            [ 7] 1014 	ld	(hl),a
                           1015 ;src/Map.c:249: (*(wallList+wallListCount)).y = currentPos.y;
   0558 23            [ 6] 1016 	inc	hl
   0559 4D            [ 4] 1017 	ld	c,l
   055A 44            [ 4] 1018 	ld	b,h
   055B DD 6E FE      [19] 1019 	ld	l,-2 (ix)
   055E DD 66 FF      [19] 1020 	ld	h,-1 (ix)
   0561 7E            [ 7] 1021 	ld	a,(hl)
   0562 02            [ 7] 1022 	ld	(bc),a
   0563 C3r7Fr03      [10] 1023 	jp	00164$
   0566                    1024 00174$:
   0566 DD F9         [10] 1025 	ld	sp, ix
   0568 DD E1         [14] 1026 	pop	ix
   056A C9            [10] 1027 	ret
                           1028 ;src/Map.c:255: void generate_exit_door(){
                           1029 ;	---------------------------------
                           1030 ; Function generate_exit_door
                           1031 ; ---------------------------------
   056B                    1032 _generate_exit_door::
   056B DD E5         [15] 1033 	push	ix
   056D DD 21 00 00   [14] 1034 	ld	ix,#0
   0571 DD 39         [15] 1035 	add	ix,sp
   0573 21 F3 FF      [10] 1036 	ld	hl,#-13
   0576 39            [11] 1037 	add	hl,sp
   0577 F9            [ 6] 1038 	ld	sp,hl
                           1039 ;src/Map.c:256: u8 x=(cpct_getRandom_mxor_u8 ()%32);
   0578 CDr00r00      [17] 1040 	call	_cpct_getRandom_mxor_u8
   057B 7D            [ 4] 1041 	ld	a,l
   057C E6 1F         [ 7] 1042 	and	a, #0x1F
   057E 4F            [ 4] 1043 	ld	c,a
                           1044 ;src/Map.c:257: u8 y=(cpct_getRandom_mxor_u8 ()%32);
   057F C5            [11] 1045 	push	bc
   0580 CDr00r00      [17] 1046 	call	_cpct_getRandom_mxor_u8
   0583 C1            [10] 1047 	pop	bc
   0584 7D            [ 4] 1048 	ld	a,l
   0585 E6 1F         [ 7] 1049 	and	a, #0x1F
   0587 5F            [ 4] 1050 	ld	e,a
                           1051 ;src/Map.c:258: u8 door_not_positioned=1;
   0588 DD 36 F7 01   [19] 1052 	ld	-9 (ix),#0x01
                           1053 ;src/Map.c:265: u8* position = (u8*)(MAP_MEM + x + MAP_WIDTH*y);
   058C 06 00         [ 7] 1054 	ld	b,#0x00
   058E 21 D0 88      [10] 1055 	ld	hl,#0x88D0
   0591 09            [11] 1056 	add	hl,bc
   0592 4D            [ 4] 1057 	ld	c,l
   0593 44            [ 4] 1058 	ld	b,h
   0594 6B            [ 4] 1059 	ld	l,e
   0595 26 00         [ 7] 1060 	ld	h,#0x00
   0597 29            [11] 1061 	add	hl, hl
   0598 29            [11] 1062 	add	hl, hl
   0599 29            [11] 1063 	add	hl, hl
   059A 29            [11] 1064 	add	hl, hl
   059B 29            [11] 1065 	add	hl, hl
   059C 09            [11] 1066 	add	hl,bc
   059D 4D            [ 4] 1067 	ld	c,l
   059E 44            [ 4] 1068 	ld	b,h
                           1069 ;src/Map.c:270: lastVal = (position-1);
   059F 59            [ 4] 1070 	ld	e,c
   05A0 50            [ 4] 1071 	ld	d,b
   05A1 1B            [ 6] 1072 	dec	de
                           1073 ;src/Map.c:271: nextVal = (position+1);
   05A2 21 01 00      [10] 1074 	ld	hl,#0x0001
   05A5 09            [11] 1075 	add	hl,bc
   05A6 DD 75 F5      [19] 1076 	ld	-11 (ix),l
   05A9 DD 74 F6      [19] 1077 	ld	-10 (ix),h
                           1078 ;src/Map.c:272: topVal = (position-MAP_WIDTH);
   05AC 79            [ 4] 1079 	ld	a,c
   05AD C6 E0         [ 7] 1080 	add	a,#0xE0
   05AF DD 77 F3      [19] 1081 	ld	-13 (ix),a
   05B2 78            [ 4] 1082 	ld	a,b
   05B3 CE FF         [ 7] 1083 	adc	a,#0xFF
   05B5 DD 77 F4      [19] 1084 	ld	-12 (ix),a
                           1085 ;src/Map.c:273: bottomVal = (position+MAP_WIDTH);
   05B8 21 20 00      [10] 1086 	ld	hl,#0x0020
   05BB 09            [11] 1087 	add	hl,bc
   05BC DD 75 F8      [19] 1088 	ld	-8 (ix),l
   05BF DD 74 F9      [19] 1089 	ld	-7 (ix),h
                           1090 ;src/Map.c:275: while(door_not_positioned){
   05C2                    1091 00138$:
   05C2 DD 7E F7      [19] 1092 	ld	a,-9 (ix)
   05C5 B7            [ 4] 1093 	or	a, a
   05C6 CAr19r07      [10] 1094 	jp	Z,00141$
                           1095 ;src/Map.c:276: if((*position)!=CELLTYPE_FLOOR){
   05C9 0A            [ 7] 1096 	ld	a,(bc)
   05CA B7            [ 4] 1097 	or	a, a
   05CB CArD6r06      [10] 1098 	jp	Z,00135$
                           1099 ;src/Map.c:277: if((((*lastVal)!=CELLTYPE_FLOOR) || (lastVal<MAP_MEM) )&& (((*nextVal)!=CELLTYPE_FLOOR)||(nextVal>=END_OF_MAP_MEM))){
   05CE 1A            [ 7] 1100 	ld	a,(de)
   05CF DD 77 FC      [19] 1101 	ld	-4 (ix),a
   05D2 7B            [ 4] 1102 	ld	a,e
   05D3 D6 D0         [ 7] 1103 	sub	a, #0xD0
   05D5 7A            [ 4] 1104 	ld	a,d
   05D6 DE 88         [ 7] 1105 	sbc	a, #0x88
   05D8 3E 00         [ 7] 1106 	ld	a,#0x00
   05DA 17            [ 4] 1107 	rla
   05DB DD 77 FB      [19] 1108 	ld	-5 (ix),a
   05DE DD 7E F5      [19] 1109 	ld	a,-11 (ix)
   05E1 D6 D0         [ 7] 1110 	sub	a, #0xD0
   05E3 DD 7E F6      [19] 1111 	ld	a,-10 (ix)
   05E6 DE 8C         [ 7] 1112 	sbc	a, #0x8C
   05E8 3E 00         [ 7] 1113 	ld	a,#0x00
   05EA 17            [ 4] 1114 	rla
   05EB DD 77 FA      [19] 1115 	ld	-6 (ix),a
                           1116 ;src/Map.c:278: if((((*topVal)!=CELLTYPE_FLOOR)||(topVal<MAP_MEM)) && (((*bottomVal)==CELLTYPE_FLOOR)&&(bottomVal<END_OF_MAP_MEM))){
   05EE E1            [10] 1117 	pop	hl
   05EF E5            [11] 1118 	push	hl
   05F0 7E            [ 7] 1119 	ld	a,(hl)
   05F1 DD 77 FF      [19] 1120 	ld	-1 (ix),a
   05F4 DD 7E F3      [19] 1121 	ld	a,-13 (ix)
   05F7 D6 D0         [ 7] 1122 	sub	a, #0xD0
   05F9 DD 7E F4      [19] 1123 	ld	a,-12 (ix)
   05FC DE 88         [ 7] 1124 	sbc	a, #0x88
   05FE 3E 00         [ 7] 1125 	ld	a,#0x00
   0600 17            [ 4] 1126 	rla
   0601 DD 77 FE      [19] 1127 	ld	-2 (ix),a
   0604 DD 7E F8      [19] 1128 	ld	a,-8 (ix)
   0607 D6 D0         [ 7] 1129 	sub	a, #0xD0
   0609 DD 7E F9      [19] 1130 	ld	a,-7 (ix)
   060C DE 8C         [ 7] 1131 	sbc	a, #0x8C
   060E 3E 00         [ 7] 1132 	ld	a,#0x00
   0610 17            [ 4] 1133 	rla
   0611 DD 77 FD      [19] 1134 	ld	-3 (ix),a
                           1135 ;src/Map.c:277: if((((*lastVal)!=CELLTYPE_FLOOR) || (lastVal<MAP_MEM) )&& (((*nextVal)!=CELLTYPE_FLOOR)||(nextVal>=END_OF_MAP_MEM))){
   0614 DD 7E FC      [19] 1136 	ld	a,-4 (ix)
   0617 B7            [ 4] 1137 	or	a, a
   0618 20 06         [12] 1138 	jr	NZ,00133$
   061A DD 7E FB      [19] 1139 	ld	a,-5 (ix)
   061D B7            [ 4] 1140 	or	a, a
   061E 28 57         [12] 1141 	jr	Z,00129$
   0620                    1142 00133$:
   0620 DD 6E F5      [19] 1143 	ld	l,-11 (ix)
   0623 DD 66 F6      [19] 1144 	ld	h,-10 (ix)
   0626 7E            [ 7] 1145 	ld	a,(hl)
   0627 B7            [ 4] 1146 	or	a, a
   0628 20 06         [12] 1147 	jr	NZ,00128$
   062A DD CB FA 46   [20] 1148 	bit	0,-6 (ix)
   062E 20 47         [12] 1149 	jr	NZ,00129$
   0630                    1150 00128$:
                           1151 ;src/Map.c:278: if((((*topVal)!=CELLTYPE_FLOOR)||(topVal<MAP_MEM)) && (((*bottomVal)==CELLTYPE_FLOOR)&&(bottomVal<END_OF_MAP_MEM))){
   0630 DD 6E F8      [19] 1152 	ld	l,-8 (ix)
   0633 DD 66 F9      [19] 1153 	ld	h,-7 (ix)
   0636 6E            [ 7] 1154 	ld	l,(hl)
   0637 DD 7E FF      [19] 1155 	ld	a,-1 (ix)
   063A B7            [ 4] 1156 	or	a, a
   063B 20 06         [12] 1157 	jr	NZ,00111$
   063D DD 7E FE      [19] 1158 	ld	a,-2 (ix)
   0640 B7            [ 4] 1159 	or	a, a
   0641 28 14         [12] 1160 	jr	Z,00107$
   0643                    1161 00111$:
   0643 7D            [ 4] 1162 	ld	a,l
   0644 B7            [ 4] 1163 	or	a, a
   0645 20 10         [12] 1164 	jr	NZ,00107$
   0647 DD 7E FD      [19] 1165 	ld	a,-3 (ix)
   064A B7            [ 4] 1166 	or	a, a
   064B 28 0A         [12] 1167 	jr	Z,00107$
                           1168 ;src/Map.c:279: door_not_positioned=0;
   064D DD 36 F7 00   [19] 1169 	ld	-9 (ix),#0x00
                           1170 ;src/Map.c:280: *position=CELLTYPE_DOOR;
   0651 3E 80         [ 7] 1171 	ld	a,#0x80
   0653 02            [ 7] 1172 	ld	(bc),a
   0654 C3rD6r06      [10] 1173 	jp	00135$
   0657                    1174 00107$:
                           1175 ;src/Map.c:282: else if((((*bottomVal)!=CELLTYPE_FLOOR)||(bottomVal>=END_OF_MAP_MEM)) && (((*topVal)==CELLTYPE_FLOOR)&&(topVal>=MAP_MEM))){
   0657 7D            [ 4] 1176 	ld	a,l
   0658 B7            [ 4] 1177 	or	a, a
   0659 20 07         [12] 1178 	jr	NZ,00105$
   065B DD 7E FD      [19] 1179 	ld	a,-3 (ix)
   065E B7            [ 4] 1180 	or	a, a
   065F C2rD6r06      [10] 1181 	jp	NZ,00135$
   0662                    1182 00105$:
   0662 DD 7E FF      [19] 1183 	ld	a,-1 (ix)
   0665 B7            [ 4] 1184 	or	a, a
   0666 20 6E         [12] 1185 	jr	NZ,00135$
   0668 DD 7E FE      [19] 1186 	ld	a,-2 (ix)
   066B B7            [ 4] 1187 	or	a, a
   066C 20 68         [12] 1188 	jr	NZ,00135$
                           1189 ;src/Map.c:283: door_not_positioned=0;
   066E DD 36 F7 00   [19] 1190 	ld	-9 (ix),#0x00
                           1191 ;src/Map.c:284: *position=CELLTYPE_DOOR;
   0672 3E 80         [ 7] 1192 	ld	a,#0x80
   0674 02            [ 7] 1193 	ld	(bc),a
   0675 18 5F         [12] 1194 	jr	00135$
   0677                    1195 00129$:
                           1196 ;src/Map.c:287: else if((((*topVal)!=CELLTYPE_FLOOR)||(topVal<MAP_MEM)) && (((*bottomVal)!=CELLTYPE_FLOOR)||(bottomVal>=END_OF_MAP_MEM))){
   0677 DD 7E FF      [19] 1197 	ld	a,-1 (ix)
   067A B7            [ 4] 1198 	or	a, a
   067B 20 06         [12] 1199 	jr	NZ,00127$
   067D DD 7E FE      [19] 1200 	ld	a,-2 (ix)
   0680 B7            [ 4] 1201 	or	a, a
   0681 28 53         [12] 1202 	jr	Z,00135$
   0683                    1203 00127$:
   0683 DD 6E F8      [19] 1204 	ld	l,-8 (ix)
   0686 DD 66 F9      [19] 1205 	ld	h,-7 (ix)
   0689 7E            [ 7] 1206 	ld	a,(hl)
   068A B7            [ 4] 1207 	or	a, a
   068B 20 06         [12] 1208 	jr	NZ,00123$
   068D DD 7E FD      [19] 1209 	ld	a,-3 (ix)
   0690 B7            [ 4] 1210 	or	a, a
   0691 20 43         [12] 1211 	jr	NZ,00135$
   0693                    1212 00123$:
                           1213 ;src/Map.c:277: if((((*lastVal)!=CELLTYPE_FLOOR) || (lastVal<MAP_MEM) )&& (((*nextVal)!=CELLTYPE_FLOOR)||(nextVal>=END_OF_MAP_MEM))){
   0693 DD 6E F5      [19] 1214 	ld	l,-11 (ix)
   0696 DD 66 F6      [19] 1215 	ld	h,-10 (ix)
   0699 6E            [ 7] 1216 	ld	l,(hl)
                           1217 ;src/Map.c:288: if((((*lastVal)!=CELLTYPE_FLOOR)|| (lastVal<MAP_MEM) ) && (((*nextVal)==CELLTYPE_FLOOR)&&(nextVal<END_OF_MAP_MEM))){
   069A DD 7E FC      [19] 1218 	ld	a,-4 (ix)
   069D B7            [ 4] 1219 	or	a, a
   069E 20 06         [12] 1220 	jr	NZ,00122$
   06A0 DD 7E FB      [19] 1221 	ld	a,-5 (ix)
   06A3 B7            [ 4] 1222 	or	a, a
   06A4 28 13         [12] 1223 	jr	Z,00118$
   06A6                    1224 00122$:
   06A6 7D            [ 4] 1225 	ld	a,l
   06A7 B7            [ 4] 1226 	or	a, a
   06A8 20 0F         [12] 1227 	jr	NZ,00118$
   06AA DD CB FA 46   [20] 1228 	bit	0,-6 (ix)
   06AE 28 09         [12] 1229 	jr	Z,00118$
                           1230 ;src/Map.c:289: door_not_positioned=0;
   06B0 DD 36 F7 00   [19] 1231 	ld	-9 (ix),#0x00
                           1232 ;src/Map.c:290: *position=CELLTYPE_DOOR;
   06B4 3E 80         [ 7] 1233 	ld	a,#0x80
   06B6 02            [ 7] 1234 	ld	(bc),a
   06B7 18 1D         [12] 1235 	jr	00135$
   06B9                    1236 00118$:
                           1237 ;src/Map.c:292: else if((((*nextVal)!=CELLTYPE_FLOOR)||(nextVal>=END_OF_MAP_MEM)) && (((*lastVal)==CELLTYPE_FLOOR)&&(lastVal>=MAP_MEM))){
   06B9 7D            [ 4] 1238 	ld	a,l
   06BA B7            [ 4] 1239 	or	a, a
   06BB 20 06         [12] 1240 	jr	NZ,00116$
   06BD DD CB FA 46   [20] 1241 	bit	0,-6 (ix)
   06C1 20 13         [12] 1242 	jr	NZ,00135$
   06C3                    1243 00116$:
   06C3 DD 7E FC      [19] 1244 	ld	a,-4 (ix)
   06C6 B7            [ 4] 1245 	or	a, a
   06C7 20 0D         [12] 1246 	jr	NZ,00135$
   06C9 DD 7E FB      [19] 1247 	ld	a,-5 (ix)
   06CC B7            [ 4] 1248 	or	a, a
   06CD 20 07         [12] 1249 	jr	NZ,00135$
                           1250 ;src/Map.c:293: door_not_positioned=0;
   06CF DD 36 F7 00   [19] 1251 	ld	-9 (ix),#0x00
                           1252 ;src/Map.c:294: *position=CELLTYPE_DOOR;
   06D3 3E 80         [ 7] 1253 	ld	a,#0x80
   06D5 02            [ 7] 1254 	ld	(bc),a
   06D6                    1255 00135$:
                           1256 ;src/Map.c:298: ++position;
   06D6 03            [ 6] 1257 	inc	bc
                           1258 ;src/Map.c:299: ++lastVal;
   06D7 13            [ 6] 1259 	inc	de
                           1260 ;src/Map.c:300: ++nextVal;
   06D8 DD 34 F5      [23] 1261 	inc	-11 (ix)
   06DB 20 03         [12] 1262 	jr	NZ,00223$
   06DD DD 34 F6      [23] 1263 	inc	-10 (ix)
   06E0                    1264 00223$:
                           1265 ;src/Map.c:301: ++topVal;
   06E0 DD 34 F3      [23] 1266 	inc	-13 (ix)
   06E3 20 03         [12] 1267 	jr	NZ,00224$
   06E5 DD 34 F4      [23] 1268 	inc	-12 (ix)
   06E8                    1269 00224$:
                           1270 ;src/Map.c:302: ++bottomVal;
   06E8 DD 34 F8      [23] 1271 	inc	-8 (ix)
   06EB 20 03         [12] 1272 	jr	NZ,00225$
   06ED DD 34 F9      [23] 1273 	inc	-7 (ix)
   06F0                    1274 00225$:
                           1275 ;src/Map.c:303: if(position==END_OF_MAP_MEM){
   06F0 79            [ 4] 1276 	ld	a,c
   06F1 D6 D0         [ 7] 1277 	sub	a, #0xD0
   06F3 C2rC2r05      [10] 1278 	jp	NZ,00138$
   06F6 78            [ 4] 1279 	ld	a,b
   06F7 D6 8C         [ 7] 1280 	sub	a, #0x8C
   06F9 C2rC2r05      [10] 1281 	jp	NZ,00138$
                           1282 ;src/Map.c:304: position = MAP_MEM;
   06FC 01 D0 88      [10] 1283 	ld	bc,#0x88D0
                           1284 ;src/Map.c:305: lastVal = (position-1);
   06FF 11 CF 88      [10] 1285 	ld	de,#0x88CF
                           1286 ;src/Map.c:306: nextVal = (position+1);
   0702 DD 36 F5 D1   [19] 1287 	ld	-11 (ix),#0xD1
   0706 DD 36 F6 88   [19] 1288 	ld	-10 (ix),#0x88
                           1289 ;src/Map.c:307: topVal = (position-MAP_WIDTH);
   070A 21 B0 88      [10] 1290 	ld	hl,#0x88B0
   070D E3            [19] 1291 	ex	(sp), hl
                           1292 ;src/Map.c:308: bottomVal = (position+MAP_WIDTH);
   070E DD 36 F8 F0   [19] 1293 	ld	-8 (ix),#0xF0
   0712 DD 36 F9 88   [19] 1294 	ld	-7 (ix),#0x88
   0716 C3rC2r05      [10] 1295 	jp	00138$
   0719                    1296 00141$:
   0719 DD F9         [10] 1297 	ld	sp, ix
   071B DD E1         [14] 1298 	pop	ix
   071D C9            [10] 1299 	ret
                           1300 ;src/Map.c:314: void generate_level(){
                           1301 ;	---------------------------------
                           1302 ; Function generate_level
                           1303 ; ---------------------------------
   071E                    1304 _generate_level::
                           1305 ;src/Map.c:315: generate_level_with_seed(r_counter);
   071E 2Ar00r00      [16] 1306 	ld	hl,(_r_counter)
   0721 E5            [11] 1307 	push	hl
   0722 CDr27r07      [17] 1308 	call	_generate_level_with_seed
   0725 F1            [10] 1309 	pop	af
   0726 C9            [10] 1310 	ret
                           1311 ;src/Map.c:318: void generate_level_with_seed(u16 seed) {
                           1312 ;	---------------------------------
                           1313 ; Function generate_level_with_seed
                           1314 ; ---------------------------------
   0727                    1315 _generate_level_with_seed::
   0727 DD E5         [15] 1316 	push	ix
   0729 DD 21 00 00   [14] 1317 	ld	ix,#0
   072D DD 39         [15] 1318 	add	ix,sp
                           1319 ;src/Map.c:320: rand_seed=seed;
   072F DD 4E 04      [19] 1320 	ld	c,4 (ix)
   0732 DD 46 05      [19] 1321 	ld	b,5 (ix)
   0735 ED 43r00r00   [20] 1322 	ld	(_rand_seed),bc
                           1323 ;src/Map.c:323: cpct_setSeed_mxor(((seed+level_get_level())&0xFFFE) + 1);
   0739 C5            [11] 1324 	push	bc
   073A CDr00r00      [17] 1325 	call	_level_get_level
   073D C1            [10] 1326 	pop	bc
   073E 26 00         [ 7] 1327 	ld	h,#0x00
   0740 09            [11] 1328 	add	hl,bc
   0741 CB 85         [ 8] 1329 	res	0, l
   0743 23            [ 6] 1330 	inc	hl
   0744 11 00 00      [10] 1331 	ld	de,#0x0000
   0747 CDr00r00      [17] 1332 	call	_cpct_setSeed_mxor
                           1333 ;src/Map.c:324: cpct_restoreState_mxor_u8();
   074A CDr00r00      [17] 1334 	call	_cpct_restoreState_mxor_u8
                           1335 ;src/Map.c:326: if(level_get_level()<KING_LEVEL){
   074D CDr00r00      [17] 1336 	call	_level_get_level
   0750 7D            [ 4] 1337 	ld	a,l
   0751 D6 20         [ 7] 1338 	sub	a, #0x20
   0753 30 08         [12] 1339 	jr	NC,00102$
                           1340 ;src/Map.c:327: generate_map();
   0755 CDrB3r00      [17] 1341 	call	_generate_map
                           1342 ;src/Map.c:328: generate_exit_door();
   0758 CDr6Br05      [17] 1343 	call	_generate_exit_door
   075B 18 03         [12] 1344 	jr	00104$
   075D                    1345 00102$:
                           1346 ;src/Map.c:331: generate_final_map();
   075D CDr21r00      [17] 1347 	call	_generate_final_map
   0760                    1348 00104$:
   0760 DD E1         [14] 1349 	pop	ix
   0762 C9            [10] 1350 	ret
                           1351 	.area _CODE
                           1352 	.area _INITIALIZER
                           1353 	.area _CABS (ABS)
