                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module UI_Log
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _ui_log_render
                             12 	.globl _print_text
                             13 	.globl _cpct_memcpy
                             14 	.globl _ui_log_textStrings
                             15 	.globl _ui_log_currentString
                             16 	.globl _ui_log_init
                             17 	.globl _ui_log_add_log
                             18 ;--------------------------------------------------------
                             19 ; special function registers
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DATA
   0000                      25 _ui_log_currentString::
   0000                      26 	.ds 1
   0001                      27 _ui_log_textStrings::
   0001                      28 	.ds 72
                             29 ;--------------------------------------------------------
                             30 ; ram data
                             31 ;--------------------------------------------------------
                             32 	.area _INITIALIZED
                             33 ;--------------------------------------------------------
                             34 ; absolute external ram data
                             35 ;--------------------------------------------------------
                             36 	.area _DABS (ABS)
                             37 ;--------------------------------------------------------
                             38 ; global & static initialisations
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _GSINIT
                             42 	.area _GSFINAL
                             43 	.area _GSINIT
                             44 ;--------------------------------------------------------
                             45 ; Home
                             46 ;--------------------------------------------------------
                             47 	.area _HOME
                             48 	.area _HOME
                             49 ;--------------------------------------------------------
                             50 ; code
                             51 ;--------------------------------------------------------
                             52 	.area _CODE
                             53 ;src/UI_Log.c:16: void ui_log_init(){
                             54 ;	---------------------------------
                             55 ; Function ui_log_init
                             56 ; ---------------------------------
   0000                      57 _ui_log_init::
                             58 ;src/UI_Log.c:18: ui_log_currentString=0;
   0000 21r00r00      [10]   59 	ld	hl,#_ui_log_currentString + 0
   0003 36 00         [10]   60 	ld	(hl), #0x00
                             61 ;src/UI_Log.c:19: print_text("LOG", UI_LOG_TITLE_POSITION, UI_LOG_BG_COLOR, UI_LOG_FG_COLOR);
   0005 21 01 03      [10]   62 	ld	hl,#0x0301
   0008 E5            [11]   63 	push	hl
   0009 21 E6 C0      [10]   64 	ld	hl,#0xC0E6
   000C E5            [11]   65 	push	hl
   000D 21r3Er00      [10]   66 	ld	hl,#___str_0
   0010 E5            [11]   67 	push	hl
   0011 CDr00r00      [17]   68 	call	_print_text
   0014 21 06 00      [10]   69 	ld	hl,#6
   0017 39            [11]   70 	add	hl,sp
   0018 F9            [ 6]   71 	ld	sp,hl
                             72 ;src/UI_Log.c:20: while(n){
   0019 0E 08         [ 7]   73 	ld	c,#0x08
   001B 11 48 00      [10]   74 	ld	de,#0x0048
   001E                      75 00101$:
   001E 79            [ 4]   76 	ld	a,c
   001F B7            [ 4]   77 	or	a, a
   0020 C8            [11]   78 	ret	Z
                             79 ;src/UI_Log.c:21: --n;
   0021 7B            [ 4]   80 	ld	a,e
   0022 C6 F7         [ 7]   81 	add	a,#0xF7
   0024 5F            [ 4]   82 	ld	e,a
   0025 7A            [ 4]   83 	ld	a,d
   0026 CE FF         [ 7]   84 	adc	a,#0xFF
   0028 57            [ 4]   85 	ld	d,a
   0029 0D            [ 4]   86 	dec	c
                             87 ;src/UI_Log.c:22: ui_log_textStrings[n][0]=0;
   002A 21r01r00      [10]   88 	ld	hl,#_ui_log_textStrings
   002D 19            [11]   89 	add	hl,de
   002E 36 00         [10]   90 	ld	(hl),#0x00
                             91 ;src/UI_Log.c:23: ui_log_textStrings[n][8]=0;
   0030 21r01r00      [10]   92 	ld	hl,#_ui_log_textStrings
   0033 19            [11]   93 	add	hl,de
   0034 D5            [11]   94 	push	de
   0035 11 08 00      [10]   95 	ld	de,#0x0008
   0038 19            [11]   96 	add	hl, de
   0039 D1            [10]   97 	pop	de
   003A 36 00         [10]   98 	ld	(hl),#0x00
   003C 18 E0         [12]   99 	jr	00101$
   003E                     100 ___str_0:
   003E 4C 4F 47            101 	.ascii "LOG"
   0041 00                  102 	.db 0x00
                            103 ;src/UI_Log.c:27: void ui_log_add_log(const char* const newLog){
                            104 ;	---------------------------------
                            105 ; Function ui_log_add_log
                            106 ; ---------------------------------
   0042                     107 _ui_log_add_log::
   0042 DD E5         [15]  108 	push	ix
   0044 DD 21 00 00   [14]  109 	ld	ix,#0
   0048 DD 39         [15]  110 	add	ix,sp
                            111 ;src/UI_Log.c:29: ui_log_currentString = (ui_log_currentString+1) & 7;
   004A 3Ar00r00      [13]  112 	ld	a,(#_ui_log_currentString + 0)
   004D 3C            [ 4]  113 	inc	a
   004E E6 07         [ 7]  114 	and	a, #0x07
   0050 32r00r00      [13]  115 	ld	(#_ui_log_currentString + 0),a
                            116 ;src/UI_Log.c:31: cpct_memcpy(ui_log_textStrings[ui_log_currentString], newLog, 8);
   0053 DD 4E 04      [19]  117 	ld	c,4 (ix)
   0056 DD 46 05      [19]  118 	ld	b,5 (ix)
   0059 ED 5Br00r00   [20]  119 	ld	de,(_ui_log_currentString)
   005D 16 00         [ 7]  120 	ld	d,#0x00
   005F 6B            [ 4]  121 	ld	l, e
   0060 62            [ 4]  122 	ld	h, d
   0061 29            [11]  123 	add	hl, hl
   0062 29            [11]  124 	add	hl, hl
   0063 29            [11]  125 	add	hl, hl
   0064 19            [11]  126 	add	hl, de
   0065 11r01r00      [10]  127 	ld	de,#_ui_log_textStrings
   0068 19            [11]  128 	add	hl,de
   0069 11 08 00      [10]  129 	ld	de,#0x0008
   006C D5            [11]  130 	push	de
   006D C5            [11]  131 	push	bc
   006E E5            [11]  132 	push	hl
   006F CDr00r00      [17]  133 	call	_cpct_memcpy
   0072 DD E1         [14]  134 	pop	ix
   0074 C9            [10]  135 	ret
                            136 ;src/UI_Log.c:35: void ui_log_render(){
                            137 ;	---------------------------------
                            138 ; Function ui_log_render
                            139 ; ---------------------------------
   0075                     140 _ui_log_render::
   0075 DD E5         [15]  141 	push	ix
   0077 DD 21 00 00   [14]  142 	ld	ix,#0
   007B DD 39         [15]  143 	add	ix,sp
   007D 3B            [ 6]  144 	dec	sp
                            145 ;src/UI_Log.c:39: while(i){
   007E 01 80 C1      [10]  146 	ld	bc,#0xC180
   0081 DD 36 FF 08   [19]  147 	ld	-1 (ix),#0x08
   0085                     148 00101$:
   0085 DD 7E FF      [19]  149 	ld	a,-1 (ix)
   0088 B7            [ 4]  150 	or	a, a
   0089 28 35         [12]  151 	jr	Z,00104$
                            152 ;src/UI_Log.c:40: ui_log_currentString=((ui_log_currentString+1)&7);
   008B 3Ar00r00      [13]  153 	ld	a,(#_ui_log_currentString + 0)
   008E 3C            [ 4]  154 	inc	a
   008F E6 07         [ 7]  155 	and	a, #0x07
   0091 32r00r00      [13]  156 	ld	(#_ui_log_currentString + 0),a
                            157 ;src/UI_Log.c:41: print_text(ui_log_textStrings[ui_log_currentString], pos, UI_LOG_BG_COLOR, UI_LOG_FG_COLOR);
   0094 ED 5Br00r00   [20]  158 	ld	de,(_ui_log_currentString)
   0098 16 00         [ 7]  159 	ld	d,#0x00
   009A 6B            [ 4]  160 	ld	l, e
   009B 62            [ 4]  161 	ld	h, d
   009C 29            [11]  162 	add	hl, hl
   009D 29            [11]  163 	add	hl, hl
   009E 29            [11]  164 	add	hl, hl
   009F 19            [11]  165 	add	hl, de
   00A0 11r01r00      [10]  166 	ld	de,#_ui_log_textStrings
   00A3 19            [11]  167 	add	hl,de
   00A4 EB            [ 4]  168 	ex	de,hl
   00A5 C5            [11]  169 	push	bc
   00A6 21 01 03      [10]  170 	ld	hl,#0x0301
   00A9 E5            [11]  171 	push	hl
   00AA C5            [11]  172 	push	bc
   00AB D5            [11]  173 	push	de
   00AC CDr00r00      [17]  174 	call	_print_text
   00AF 21 06 00      [10]  175 	ld	hl,#6
   00B2 39            [11]  176 	add	hl,sp
   00B3 F9            [ 6]  177 	ld	sp,hl
   00B4 C1            [10]  178 	pop	bc
                            179 ;src/UI_Log.c:42: pos+=80;
   00B5 21 50 00      [10]  180 	ld	hl,#0x0050
   00B8 09            [11]  181 	add	hl,bc
   00B9 4D            [ 4]  182 	ld	c,l
   00BA 44            [ 4]  183 	ld	b,h
                            184 ;src/UI_Log.c:43: --i;
   00BB DD 35 FF      [23]  185 	dec	-1 (ix)
   00BE 18 C5         [12]  186 	jr	00101$
   00C0                     187 00104$:
   00C0 33            [ 6]  188 	inc	sp
   00C1 DD E1         [14]  189 	pop	ix
   00C3 C9            [10]  190 	ret
                            191 	.area _CODE
                            192 	.area _INITIALIZER
                            193 	.area _CABS (ABS)
